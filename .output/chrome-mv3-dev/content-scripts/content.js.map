{"version":3,"file":"content.js","sources":["../../../node_modules/wxt/dist/utils/define-content-script.mjs","../../../src/shared/devices.ts","../../../src/phone-frame-simple.ts","../../../src/hardware-renderer.ts","../../../entrypoints/content.ts","../../../node_modules/@wxt-dev/browser/src/index.mjs","../../../node_modules/wxt/dist/browser.mjs","../../../node_modules/wxt/dist/utils/internal/logger.mjs","../../../node_modules/wxt/dist/utils/internal/custom-events.mjs","../../../node_modules/wxt/dist/utils/internal/location-watcher.mjs","../../../node_modules/wxt/dist/utils/content-script-context.mjs"],"sourcesContent":["export function defineContentScript(definition) {\n  return definition;\n}\n","// Device safe area insets configuration with physical appearance\nimport type { DevicesCollection } from '../../types/global.js';\n\nexport const DEVICES: DevicesCollection = {\n  none: {\n    name: \"None (Default)\",\n    safeAreaInsets: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 0,\n      height: 0,\n      screenWidth: 0,\n      screenHeight: 0,\n      borderRadius: 0,\n      screenRadius: 0,\n      notch: {\n        type: \"none\"\n      },\n      homeIndicator: null,\n      colors: [],\n      brand: \"custom\",\n      show: false\n    }\n  },\n  iphone14: {\n    name: \"iPhone 14\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 146.7,\n      height: 284,\n      screenWidth: 390,\n      screenHeight: 844,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 30,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#1f1f1f\", \"#2d2d2d\", \"#3a3a3a\"],\n      brand: \"apple\"\n    }\n  },\n  iphone14Pro: {\n    name: \"iPhone 14 Pro\",\n    safeAreaInsets: {\n      top: 59,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 147.5,\n      height: 285,\n      screenWidth: 393,\n      screenHeight: 852,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 32,\n        height: 8,\n        radius: 4,\n        color: \"#000000\",\n        shadow: true,\n        borderRadius: \"4px\"\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#2c2c2e\", \"#3a3a3c\", \"#48484a\"],\n      brand: \"apple\",\n      frameImage: {\n        light: \"iphone14-pro-light.png\",\n        dark: \"iphone14-pro-dark.png\",\n        hasDynamicIsland: true,\n        hasHomeIndicator: true,\n        screenOffset: { x: 8.25, y: 12, width: 131, height: 261 }\n      },\n      hardwareRegions: [\n        {\n          type: \"dynamic-island\",\n          position: { x: 133, y: 10, width: 126, height: 30 },\n          style: {\n            backgroundColor: \"#000000\",\n            borderRadius: \"15px\",\n            boxShadow: \"inset 0 1px 3px rgba(255,255,255,0.1), 0 1px 6px rgba(0,0,0,0.4)\",\n            opacity: 0.98,\n            zIndex: 1000001\n          },\n          content: {\n            type: \"sensors\",\n            elements: [\n              {\n                type: \"circle\",\n                x: 35,\n                y: 15,\n                radius: 5,\n                color: \"#1a1a1a\"\n              },\n              {\n                type: \"circle\",\n                x: 55,\n                y: 15,\n                radius: 3,\n                color: \"#2a2a2a\"\n              },\n              {\n                type: \"rect\",\n                x: 70,\n                y: 12,\n                width: 20,\n                height: 6,\n                color: \"#333333\"\n              }\n            ]\n          }\n        },\n        {\n          type: \"status-bar\",\n          position: { x: 8, y: 5, width: 50, height: 20 },\n          style: {\n            opacity: 0,\n            zIndex: 1000000\n          },\n          content: {\n            elements: [\n              { type: \"circle\", x: 10, y: 10, radius: 2, color: \"#ffffff\" },\n              { type: \"circle\", x: 18, y: 10, radius: 2, color: \"#ffffff\" },\n              { type: \"circle\", x: 26, y: 10, radius: 2, color: \"#ffffff\" }\n            ]\n          }\n        },\n        {\n          type: \"status-bar\",\n          position: { x: 190, y: 5, width: 50, height: 20 },\n          style: {\n            opacity: 0,\n            zIndex: 1000000\n          },\n          content: {\n            elements: [\n              {\n                type: \"rect\",\n                x: 25,\n                y: 8,\n                width: 20,\n                height: 10,\n                color: \"rgba(255,255,255,0.8)\"\n              }\n            ]\n          }\n        },\n        {\n          type: \"home-indicator\",\n          position: { x: 0, y: 0, width: 134, height: 5 },\n          style: {\n            backgroundColor: \"rgba(255, 255, 255, 0.6)\",\n            borderRadius: \"2.5px\",\n            opacity: 0.8,\n            zIndex: 1000001\n          }\n        }\n      ]\n    }\n  },\n  iphone14ProMax: {\n    name: \"iPhone 14 Pro Max\",\n    safeAreaInsets: {\n      top: 59,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 160.7,\n      height: 310,\n      screenWidth: 430,\n      screenHeight: 932,\n      borderRadius: 22,\n      screenRadius: 18,\n      notch: {\n        type: \"dynamic-island\",\n        width: 34,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 40,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#2c2c2e\", \"#3a3a3c\", \"#48484a\"],\n      brand: \"apple\"\n    }\n  },\n  iphoneX: {\n    name: \"iPhone X/XS\",\n    safeAreaInsets: {\n      top: 44,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 143.6,\n      height: 280,\n      screenWidth: 127,\n      screenHeight: 256,\n      borderRadius: 18,\n      screenRadius: 14,\n      notch: {\n        type: \"notch\",\n        width: 40,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#1f1f1f\", \"#2d2d2d\", \"#3a3a3a\"],\n      brand: \"apple\"\n    }\n  },\n  iphoneXR: {\n    name: \"iPhone XR/11\",\n    safeAreaInsets: {\n      top: 48,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 150.9,\n      height: 290,\n      screenWidth: 134,\n      screenHeight: 266,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"notch\",\n        width: 42,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 38,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#ff6b6b\", \"#ff8e8e\", \"#ffb3b3\"],\n      brand: \"apple\"\n    }\n  },\n  iphone12: {\n    name: \"iPhone 12/12 Pro\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 146.7,\n      height: 284,\n      screenWidth: 390,\n      screenHeight: 844,\n      borderRadius: 19,\n      screenRadius: 15,\n      notch: {\n        type: \"notch\",\n        width: 38,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#4a90e2\", \"#5ba0f2\", \"#6cb0ff\"],\n      brand: \"apple\"\n    }\n  },\n  iphone12Mini: {\n    name: \"iPhone 12 Mini\",\n    safeAreaInsets: {\n      top: 50,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 131.5,\n      height: 255,\n      screenWidth: 375,\n      screenHeight: 812,\n      borderRadius: 17,\n      screenRadius: 13,\n      notch: {\n        type: \"notch\",\n        width: 34,\n        height: 7,\n        radius: 3\n      },\n      homeIndicator: {\n        width: 32,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#50e3c2\", \"#70f3d2\", \"#90ffe2\"],\n      brand: \"apple\"\n    }\n  },\n  iphone12ProMax: {\n    name: \"iPhone 12 Pro Max\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 160.8,\n      height: 310,\n      screenWidth: 428,\n      screenHeight: 926,\n      borderRadius: 22,\n      screenRadius: 18,\n      notch: {\n        type: \"notch\",\n        width: 42,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 40,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#c9b037\", \"#d4c547\", \"#dfda57\"],\n      brand: \"apple\"\n    }\n  },\n  iphone13: {\n    name: \"iPhone 13\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 146.7,\n      height: 284,\n      screenWidth: 390,\n      screenHeight: 844,\n      borderRadius: 19,\n      screenRadius: 15,\n      notch: {\n        type: \"small-notch\",\n        width: 32,\n        height: 6,\n        radius: 3\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#ffc0cb\", \"#ffd0db\", \"#ffe0eb\"],\n      brand: \"apple\"\n    }\n  },\n  iphone13Mini: {\n    name: \"iPhone 13 Mini\",\n    safeAreaInsets: {\n      top: 50,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 131.5,\n      height: 255,\n      screenWidth: 375,\n      screenHeight: 812,\n      borderRadius: 17,\n      screenRadius: 13,\n      notch: {\n        type: \"small-notch\",\n        width: 28,\n        height: 6,\n        radius: 3\n      },\n      homeIndicator: {\n        width: 32,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#4169e1\", \"#5179f1\", \"#6189ff\"],\n      brand: \"apple\"\n    }\n  },\n  iphone13Pro: {\n    name: \"iPhone 13 Pro\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 147.5,\n      height: 285,\n      screenWidth: 390,\n      screenHeight: 844,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"small-notch\",\n        width: 32,\n        height: 6,\n        radius: 3\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#2c2c2e\", \"#3a3a3c\", \"#48484a\"],\n      brand: \"apple\"\n    }\n  },\n  iphone13ProMax: {\n    name: \"iPhone 13 Pro Max\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 160.8,\n      height: 310,\n      screenWidth: 428,\n      screenHeight: 926,\n      borderRadius: 22,\n      screenRadius: 18,\n      notch: {\n        type: \"small-notch\",\n        width: 34,\n        height: 6,\n        radius: 3\n      },\n      homeIndicator: {\n        width: 40,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#a7c0cd\", \"#b7d0dd\", \"#c7e0ed\"],\n      brand: \"apple\"\n    }\n  },\n  iphone15: {\n    name: \"iPhone 15\",\n    safeAreaInsets: {\n      top: 59,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 147.6,\n      height: 285,\n      screenWidth: 390,\n      screenHeight: 844,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 30,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#ffb3d9\", \"#ffc3e3\", \"#ffd3ed\"],\n      brand: \"apple\"\n    }\n  },\n  iphone15Pro: {\n    name: \"iPhone 15 Pro\",\n    safeAreaInsets: {\n      top: 59,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 146.6,\n      height: 284,\n      screenWidth: 393,\n      screenHeight: 852,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 32,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#d4af37\", \"#e4bf47\", \"#f4cf57\"],\n      brand: \"apple\"\n    }\n  },\n  iphone15ProMax: {\n    name: \"iPhone 15 Pro Max\",\n    safeAreaInsets: {\n      top: 59,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 159.9,\n      height: 309,\n      screenWidth: 430,\n      screenHeight: 932,\n      borderRadius: 22,\n      screenRadius: 18,\n      notch: {\n        type: \"dynamic-island\",\n        width: 34,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 40,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#708090\", \"#8090a0\", \"#90a0b0\"],\n      brand: \"apple\",\n      frameImage: {\n        light: \"iphone15-promax-light.png\",\n        dark: \"iphone15-promax-dark.png\",\n        hasDynamicIsland: true,\n        hasHomeIndicator: true,\n        screenOffset: { x: 8.5, y: 12, width: 143, height: 285 }\n      }\n    }\n  },\n  // Android devices with realistic appearance\n  pixelXL: {\n    name: \"Google Pixel XL\",\n    safeAreaInsets: {\n      top: 24,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 154.7,\n      height: 295,\n      screenWidth: 138,\n      screenHeight: 271,\n      borderRadius: 8,\n      screenRadius: 4,\n      notch: {\n        type: \"none\"\n      },\n      homeIndicator: null,\n      colors: [\"#34495e\", \"#4a6275\", \"#607a8c\"],\n      brand: \"google\"\n    }\n  },\n  pixel3XL: {\n    name: \"Google Pixel 3 XL\",\n    safeAreaInsets: {\n      top: 28,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 158,\n      height: 300,\n      screenWidth: 142,\n      screenHeight: 276,\n      borderRadius: 12,\n      screenRadius: 8,\n      notch: {\n        type: \"notch\",\n        width: 36,\n        height: 6,\n        radius: 3\n      },\n      homeIndicator: null,\n      colors: [\"#1a1a1a\", \"#2a2a2a\", \"#3a3a3a\"],\n      brand: \"google\"\n    }\n  },\n  pixel4: {\n    name: \"Google Pixel 4\",\n    safeAreaInsets: {\n      top: 28,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 147.1,\n      height: 280,\n      screenWidth: 131,\n      screenHeight: 256,\n      borderRadius: 10,\n      screenRadius: 6,\n      notch: {\n        type: \"forehead\",\n        width: 131,\n        height: 6,\n        radius: 0\n      },\n      homeIndicator: null,\n      colors: [\"#ffffff\", \"#f5f5f5\", \"#ebebeb\"],\n      brand: \"google\"\n    }\n  },\n  samsungS21: {\n    name: \"Samsung Galaxy S21\",\n    safeAreaInsets: {\n      top: 28,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 151.7,\n      height: 290,\n      screenWidth: 135,\n      screenHeight: 266,\n      borderRadius: 16,\n      screenRadius: 12,\n      notch: {\n        type: \"punch-hole\",\n        width: 8,\n        height: 8,\n        radius: 4,\n        position: \"center-top\"\n      },\n      homeIndicator: null,\n      colors: [\"#9b59b6\", \"#ae6fc6\", \"#c185d6\"],\n      brand: \"samsung\"\n    }\n  },\n  samsungS22: {\n    name: \"Samsung Galaxy S22\",\n    safeAreaInsets: {\n      top: 32,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 146,\n      height: 285,\n      screenWidth: 360,\n      screenHeight: 780,\n      borderRadius: 16,\n      screenRadius: 12,\n      notch: {\n        type: \"punch-hole\",\n        width: 8,\n        height: 8,\n        radius: 4,\n        position: \"center-top\",\n        color: \"#000000\",\n        shadow: true\n      },\n      homeIndicator: null,\n      colors: [\"#2ecc71\", \"#4ed681\", \"#6ee091\"],\n      brand: \"samsung\",\n      frameImage: {\n        light: \"samsung-s22-light.png\",\n        dark: \"samsung-s22-dark.png\",\n        hasDynamicIsland: false,\n        hasHomeIndicator: false,\n        screenOffset: { x: 8, y: 12, width: 130, height: 261 }\n      },\n      hardwareRegions: [\n        {\n          type: \"camera-cutout\",\n          position: { x: 168, y: 15, width: 24, height: 24 },\n          style: {\n            backgroundColor: \"#000000\",\n            borderRadius: \"50%\",\n            boxShadow: \"0 0 8px rgba(0,0,0,0.6), inset 0 1px 3px rgba(255,255,255,0.1)\",\n            opacity: 0.98,\n            zIndex: 1000001\n          },\n          content: {\n            type: \"camera\",\n            elements: [\n              {\n                type: \"circle\",\n                x: 12,\n                y: 12,\n                radius: 8,\n                color: \"#1a1a1a\"\n              },\n              {\n                type: \"circle\",\n                x: 12,\n                y: 12,\n                radius: 4,\n                color: \"#333333\"\n              }\n            ]\n          }\n        },\n        {\n          type: \"status-bar\",\n          position: { x: 8, y: 5, width: 110, height: 20 },\n          style: {\n            opacity: 0,\n            zIndex: 1000000\n          },\n          content: {\n            elements: [\n              { type: \"circle\", x: 10, y: 10, radius: 2, color: \"#ffffff\" },\n              { type: \"circle\", x: 18, y: 10, radius: 2, color: \"#ffffff\" },\n              { type: \"circle\", x: 26, y: 10, radius: 2, color: \"#ffffff\" }\n            ]\n          }\n        },\n        {\n          type: \"status-bar\",\n          position: { x: 150, y: 5, width: 80, height: 20 },\n          style: {\n            opacity: 0,\n            zIndex: 1000000\n          },\n          content: {\n            elements: [\n              {\n                type: \"rect\",\n                x: 50,\n                y: 8,\n                width: 20,\n                height: 10,\n                color: \"rgba(255,255,255,0.8)\"\n              }\n            ]\n          }\n        },\n        {\n          type: \"navigation-bar\",\n          position: { x: 0, y: 0, width: 130, height: 48 },\n          style: {\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n            opacity: 0.6,\n            zIndex: 1000000\n          },\n          content: {\n            elements: [\n              {\n                type: \"circle\",\n                x: 32,\n                y: 24,\n                radius: 6,\n                color: \"rgba(255,255,255,0.7)\"\n              },\n              {\n                type: \"circle\",\n                x: 65,\n                y: 24,\n                radius: 8,\n                color: \"rgba(255,255,255,0.7)\"\n              },\n              {\n                type: \"rect\",\n                x: 90,\n                y: 20,\n                width: 16,\n                height: 8,\n                color: \"rgba(255,255,255,0.7)\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  },\n  // Landscape orientation variations\n  iphone14Landscape: {\n    name: \"iPhone 14 (Landscape)\",\n    safeAreaInsets: {\n      top: 0,\n      bottom: 21,\n      left: 47,\n      right: 47\n    },\n    appearance: {\n      width: 284,\n      height: 146.7,\n      screenWidth: 260,\n      screenHeight: 130,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 8,\n        height: 30,\n        radius: 4,\n        position: \"left\"\n      },\n      homeIndicator: {\n        width: 2,\n        height: 36,\n        radius: 1,\n        position: \"bottom\"\n      },\n      colors: [\"#1f1f1f\", \"#2d2d2d\", \"#3a3a3a\"],\n      brand: \"apple\",\n      orientation: \"landscape\"\n    }\n  },\n  iphone14ProLandscape: {\n    name: \"iPhone 14 Pro (Landscape)\",\n    safeAreaInsets: {\n      top: 0,\n      bottom: 21,\n      left: 59,\n      right: 59\n    },\n    appearance: {\n      width: 285,\n      height: 147.5,\n      screenWidth: 261,\n      screenHeight: 131,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 8,\n        height: 32,\n        radius: 4,\n        position: \"left\"\n      },\n      homeIndicator: {\n        width: 2,\n        height: 36,\n        radius: 1,\n        position: \"bottom\"\n      },\n      colors: [\"#2c2c2e\", \"#3a3a3c\", \"#48484a\"],\n      brand: \"apple\",\n      orientation: \"landscape\"\n    }\n  }\n};\n\nexport default DEVICES;","// PhoneFrameSimple implementation for Chrome extension\nimport type { SafeAreaInsets } from '../types/global.js';\n\nclass PhoneFrameSimple {\n  public overlayElement: HTMLElement | null = null;\n  private options: any;\n\n  constructor(options: any = {}) {\n    this.options = {\n      scale: 0.4,\n      showSafeArea: true,\n      showDeviceFrame: true,\n      theme: 'light',\n      ...options\n    };\n    console.log('[Safe Area Simulator] PhoneFrameSimple initialized');\n  }\n\n  destroy(): void {\n    if (this.overlayElement && this.overlayElement.parentNode) {\n      this.overlayElement.parentNode.removeChild(this.overlayElement);\n    }\n    this.overlayElement = null;\n  }\n\n  updateDevice(device: string, insets: SafeAreaInsets): void {\n    console.log('[Safe Area Simulator] PhoneFrameSimple device updated:', device, insets);\n    // Basic implementation for visual feedback\n    // In a full implementation, this would create device frame overlay\n  }\n\n  hide(): void {\n    if (this.overlayElement) {\n      this.overlayElement.style.display = 'none';\n    }\n  }\n\n  show(): void {\n    if (this.overlayElement) {\n      this.overlayElement.style.display = 'block';\n    }\n  }\n}\n\n// Export for module systems\nexport { PhoneFrameSimple };\nexport default PhoneFrameSimple; ","// Hardware regions renderer for realistic device simulation\n/// <reference types=\"chrome\" />\nimport type { HardwareRegion, Device } from '../types/global.js';\n\nexport class HardwareRegionsRenderer {\n  private container: HTMLElement | null = null;\n  private regions: HardwareRegion[] = [];\n  private isVisible: boolean = true;\n\n  constructor() {\n    this.init();\n  }\n\n  private init(): void {\n    this.createContainer();\n  }\n\n  private createContainer(): void {\n    // Remove existing container\n    this.removeContainer();\n    \n    this.container = document.createElement('div');\n    this.container.id = 'safe-area-hardware-regions';\n    this.container.className = 'safe-area-hardware-regions';\n    \n    // Base styles for the hardware regions container\n    this.container.style.cssText = `\n      position: fixed !important;\n      top: 0 !important;\n      left: 0 !important;\n      right: 0 !important;\n      bottom: 0 !important;\n      pointer-events: none !important;\n      z-index: 999998 !important;\n      display: ${this.isVisible ? 'block' : 'none'} !important;\n    `;\n    \n    // Try to append to body, fallback to documentElement\n    if (document.body) {\n      document.body.appendChild(this.container);\n    } else if (document.documentElement) {\n      document.documentElement.appendChild(this.container);\n    }\n  }\n\n  public setVisible(visible: boolean): void {\n    this.isVisible = visible;\n    if (this.container) {\n      this.container.style.display = visible ? 'block' : 'none';\n    }\n  }\n\n  public updateDevice(device: Device): void {\n    if (!device.appearance.hardwareRegions) {\n      this.generateHardwareRegions(device);\n    } else {\n      this.regions = device.appearance.hardwareRegions;\n    }\n    this.renderRegions();\n  }\n\n  private generateHardwareRegions(device: Device): void {\n    const regions: HardwareRegion[] = [];\n    const { appearance } = device;\n    const viewport = this.getViewportSize();\n    \n    // Calculate scaling factor to fit screen\n    const scaleX = viewport.width / appearance.screenWidth;\n    const scaleY = viewport.height / appearance.screenHeight;\n    const scale = Math.min(scaleX, scaleY);\n\n    // Generate Dynamic Island\n    if (appearance.notch.type === 'dynamic-island') {\n      regions.push(this.createDynamicIslandRegion(appearance, scale, viewport));\n    }\n    \n    // Generate traditional notch\n    if (appearance.notch.type === 'notch' || appearance.notch.type === 'small-notch') {\n      regions.push(this.createNotchRegion(appearance, scale, viewport));\n    }\n    \n    // Generate punch hole (for Samsung devices)\n    if (appearance.notch.type === 'punch-hole') {\n      regions.push(this.createPunchHoleRegion(appearance, scale, viewport));\n    }\n    \n    // Generate home indicator\n    if (appearance.homeIndicator) {\n      regions.push(this.createHomeIndicatorRegion(appearance, scale, viewport));\n    }\n    \n    // Generate status bar area\n    if (appearance.brand === 'apple' && appearance.notch.type !== 'none') {\n      regions.push(...this.createStatusBarRegions(appearance, scale, viewport));\n    }\n\n    this.regions = regions;\n  }\n\n  private createDynamicIslandRegion(appearance: any, scale: number, viewport: any): HardwareRegion {\n    const island = appearance.notch;\n    const centerX = viewport.width / 2;\n    const topOffset = 15;\n    \n    // Create a proper Dynamic Island - single unified element\n    const islandWidth = 120; // Fixed width for better visibility\n    const islandHeight = 30;  // Fixed height\n    \n    return {\n      type: 'dynamic-island',\n      position: {\n        x: centerX - islandWidth / 2,\n        y: topOffset,\n        width: islandWidth,\n        height: islandHeight\n      },\n      style: {\n        backgroundColor: '#000000',\n        borderRadius: '15px', // Perfect pill shape\n        boxShadow: 'inset 0 1px 3px rgba(255,255,255,0.1), 0 2px 8px rgba(0,0,0,0.4)',\n        opacity: 0.98,\n        zIndex: 1000001\n      },\n      content: {\n        type: 'sensors',\n        elements: [\n          // Front camera (left side)\n          {\n            type: 'circle',\n            x: 25,\n            y: 15,\n            radius: 5,\n            color: '#1a1a1a'\n          },\n          // Face ID sensors (tiny dots)\n          {\n            type: 'circle',\n            x: 40,\n            y: 12,\n            radius: 1.5,\n            color: '#333333'\n          },\n          {\n            type: 'circle',\n            x: 45,\n            y: 18,\n            radius: 1,\n            color: '#333333'\n          },\n          {\n            type: 'circle',\n            x: 50,\n            y: 15,\n            radius: 1,\n            color: '#333333'\n          },\n          // Speaker grille (center-right)\n          {\n            type: 'rect',\n            x: 60,\n            y: 12,\n            width: 30,\n            height: 6,\n            color: '#2a2a2a',\n            borderRadius: '3px'\n          },\n          // Proximity sensor (far right)\n          {\n            type: 'circle',\n            x: 95,\n            y: 15,\n            radius: 3,\n            color: '#1a1a1a'\n          }\n        ]\n      }\n    };\n  }\n\n  private createNotchRegion(appearance: any, scale: number, viewport: any): HardwareRegion {\n    const notch = appearance.notch;\n    const centerX = viewport.width / 2;\n    \n    return {\n      type: 'notch',\n      position: {\n        x: centerX - (notch.width * scale) / 2,\n        y: 0,\n        width: notch.width * scale,\n        height: notch.height * scale\n      },\n      style: {\n        backgroundColor: '#000000',\n        borderRadius: `0 0 ${notch.radius * scale}px ${notch.radius * scale}px`,\n        opacity: 0.98,\n        zIndex: 999999\n      },\n      content: {\n        type: 'sensors',\n        elements: [\n          // Speaker grille\n          {\n            type: 'rect',\n            x: (notch.width * scale) * 0.35,\n            y: (notch.height * scale) * 0.3,\n            width: (notch.width * scale) * 0.3,\n            height: (notch.height * scale) * 0.15,\n            color: '#333333'\n          },\n          // Camera\n          {\n            type: 'circle',\n            x: (notch.width * scale) * 0.2,\n            y: (notch.height * scale) * 0.5,\n            radius: (notch.height * scale) * 0.2,\n            color: '#1a1a1a'\n          },\n          // Sensors\n          {\n            type: 'dot',\n            x: (notch.width * scale) * 0.8,\n            y: (notch.height * scale) * 0.5,\n            width: 2 * scale,\n            height: 2 * scale,\n            color: '#444444'\n          }\n        ]\n      }\n    };\n  }\n\n  private createPunchHoleRegion(appearance: any, scale: number, viewport: any): HardwareRegion {\n    const punchHole = appearance.notch;\n    const centerX = viewport.width / 2;\n    const topOffset = 15 * scale;\n    \n    return {\n      type: 'camera-cutout',\n      position: {\n        x: centerX - (punchHole.width * scale) / 2,\n        y: topOffset,\n        width: punchHole.width * scale,\n        height: punchHole.height * scale\n      },\n      style: {\n        backgroundColor: '#000000',\n        borderRadius: '50%',\n        boxShadow: '0 0 8px rgba(0,0,0,0.5)',\n        opacity: 0.95,\n        zIndex: 999999\n      },\n      content: {\n        type: 'camera',\n        elements: [\n          {\n            type: 'circle',\n            x: (punchHole.width * scale) / 2,\n            y: (punchHole.height * scale) / 2,\n            radius: (punchHole.width * scale) * 0.3,\n            color: '#2a2a2a'\n          }\n        ]\n      }\n    };\n  }\n\n  private createHomeIndicatorRegion(appearance: any, scale: number, viewport: any): HardwareRegion {\n    const indicator = appearance.homeIndicator;\n    const centerX = viewport.width / 2;\n    const bottomOffset = 12;\n    \n    return {\n      type: 'home-indicator',\n      position: {\n        x: centerX - (indicator.width * 2) / 2,\n        y: viewport.height - bottomOffset - (indicator.height * 2),\n        width: indicator.width * 2,\n        height: indicator.height * 2\n      },\n      style: {\n        backgroundColor: '#000000', // iOS原生黑色\n        borderRadius: `${indicator.radius * 2}px`,\n        opacity: 0.9,\n        zIndex: 1000001,\n        boxShadow: '0 1px 3px rgba(0,0,0,0.4)' // 更深的阴影\n      }\n    };\n  }\n\n  private createStatusBarRegions(appearance: any, scale: number, viewport: any): HardwareRegion[] {\n    // No status bar regions - removed time display\n    return [];\n  }\n\n  private renderRegions(): void {\n    if (!this.container) {\n      this.createContainer();\n    }\n    \n    if (!this.container) return;\n    \n    // Clear existing regions\n    this.container.innerHTML = '';\n    \n    // Render each hardware region\n    this.regions.forEach(region => {\n      const element = this.createRegionElement(region);\n      if (element) {\n        this.container!.appendChild(element);\n      }\n    });\n  }\n\n  private createRegionElement(region: HardwareRegion): HTMLElement | null {\n    const element = document.createElement('div');\n    element.className = `hardware-region hardware-region-${region.type}`;\n    \n    // Apply position and basic styles\n    const style = {\n      position: 'absolute',\n      left: `${region.position.x}px`,\n      top: `${region.position.y}px`,\n      width: `${region.position.width}px`,\n      height: `${region.position.height}px`,\n      pointerEvents: 'none',\n      ...region.style\n    };\n    \n    Object.assign(element.style, style);\n    \n    // Add content elements if specified\n    if (region.content?.elements) {\n      region.content.elements.forEach(contentElement => {\n        const contentEl = this.createContentElement(contentElement);\n        if (contentEl) {\n          element.appendChild(contentEl);\n        }\n      });\n    }\n    \n    return element;\n  }\n\n  private createContentElement(content: any): HTMLElement | null {\n    const element = document.createElement('div');\n    element.className = `hardware-content hardware-content-${content.type}`;\n    \n    const baseStyle = {\n      position: 'absolute',\n      left: `${content.x}px`,\n      top: `${content.y}px`,\n      pointerEvents: 'none',\n      backgroundColor: content.color || 'transparent'\n    };\n    \n    switch (content.type) {\n      case 'text':\n        Object.assign(element.style, {\n          ...baseStyle,\n          width: `${content.width}px`,\n          height: `${content.height}px`,\n          color: content.color,\n          fontSize: '14px',\n          fontWeight: '600',\n          fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-start',\n          lineHeight: '1',\n          textShadow: '0 1px 2px rgba(0,0,0,0.3)',\n          backgroundColor: 'transparent'\n        });\n        element.textContent = content.content || '';\n        break;\n        \n      case 'circle':\n        Object.assign(element.style, {\n          ...baseStyle,\n          width: `${content.radius * 2}px`,\n          height: `${content.radius * 2}px`,\n          borderRadius: '50%',\n          transform: 'translate(-50%, -50%)'\n        });\n        break;\n        \n      case 'rect':\n        Object.assign(element.style, {\n          ...baseStyle,\n          width: `${content.width}px`,\n          height: `${content.height}px`,\n          borderRadius: content.borderRadius || '1px'\n        });\n        break;\n        \n      case 'dot':\n        Object.assign(element.style, {\n          ...baseStyle,\n          width: `${content.width}px`,\n          height: `${content.height}px`,\n          borderRadius: '50%'\n        });\n        break;\n        \n      case 'line':\n        Object.assign(element.style, {\n          ...baseStyle,\n          width: `${content.width}px`,\n          height: `${content.height}px`\n        });\n        break;\n    }\n    \n    return element;\n  }\n\n  private getViewportSize(): { width: number; height: number } {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  public removeContainer(): void {\n    // Remove our specific container instance\n    if (this.container) {\n      this.container.remove();\n      this.container = null;\n    }\n    \n    // Also clean up any orphaned containers with the same ID\n    const orphanedContainers = document.querySelectorAll('#safe-area-hardware-regions');\n    orphanedContainers.forEach(container => {\n      if (container !== this.container) {\n        container.remove();\n      }\n    });\n  }\n\n\n  public destroy(): void {\n    this.removeContainer();\n    this.regions = [];\n  }\n}","import type { SafeAreaInsets, SafeAreaMessage } from '../types/global.js';\nimport { DEVICES } from '../src/shared/devices.js';\nimport { createSafeAreaCSS, BASE_SAFE_AREA_STYLES, createSafeAreaEvent, debounce } from '../src/shared/utils.js';\nimport { PhoneFrameSimple } from '../src/phone-frame-simple.js';\nimport { HardwareRegionsRenderer } from '../src/hardware-renderer.js';\n\nexport default defineContentScript({\n  matches: ['<all_urls>'],\n  runAt: 'document_start',\n  main(ctx) {\n    console.log('Content script initialized');\n    \n    const injector = new SafeAreaInjector();\n    \n    // Clean up when the content script is invalidated\n    ctx.onInvalidated(() => {\n      injector.handleExtensionDisable();\n    });\n  }\n});\n\nclass SafeAreaInjector {\n  private isEnabled: boolean = false;\n  private currentDevice: string | null = null;\n  private currentInsets: SafeAreaInsets = { top: 0, bottom: 0, left: 0, right: 0 };\n  private styleElement: HTMLStyleElement | null = null;\n  private phoneFrameOverlay: PhoneFrameSimple | null = null;\n  private hardwareRenderer: HardwareRegionsRenderer | null = null;\n  private debugMode: boolean = false;\n  private showHardwareRegions: boolean = false;\n  private observer: MutationObserver | null = null;\n  private routeChangeTimeout: number | null = null;\n  private debugOverlayObserver: MutationObserver | null = null;\n  private overlayRecreationTimeout: number | null = null;\n  \n  constructor() {\n    this.init();\n  }\n\n  private init(): void {\n    // Setup message listener immediately\n    this.setupMessageListener();\n    \n    // Wait for DOM to be ready for other operations\n    this.waitForDOM(() => {\n      this.loadStoredState();\n      this.createStyleElement();\n      this.injectInitialStyles();\n      this.createPhoneFrameOverlay();\n      this.createHardwareRenderer();\n      this.setupRouteObserver();\n    });\n  }\n\n  private waitForDOM(callback: () => void): void {\n    if (document.head && document.body) {\n      callback();\n    } else if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', callback);\n    } else {\n      // DOM is ready but head/body might not be fully constructed\n      setTimeout(() => this.waitForDOM(callback), 10);\n    }\n  }\n\n  private async loadStoredState(): Promise<void> {\n    try {\n      const result = await chrome.storage.sync.get(['enabled', 'device', 'customInsets', 'showDeviceFrame', 'showHardwareRegions', 'debugMode']);\n      this.isEnabled = result.enabled || false;\n      this.currentDevice = result.device || null;\n      this.debugMode = result.debugMode || false;\n      this.showHardwareRegions = result.showHardwareRegions !== false; // Default to true\n      \n      if (this.isEnabled && result.device && DEVICES[result.device]) {\n        const device = DEVICES[result.device];\n        if (device) {\n          this.currentInsets = device.safeAreaInsets;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading stored state:', error);\n    }\n  }\n\n  private createPhoneFrameOverlay(): void {\n    try {\n      // Check if PhoneFrameSimple class is available\n      if (typeof PhoneFrameSimple === 'undefined') {\n        console.warn('[Safe Area Simulator] PhoneFrameSimple class not available');\n        return;\n      }\n      \n      this.phoneFrameOverlay = new PhoneFrameSimple({\n        scale: 0.4,\n        showSafeArea: true,\n        showDeviceFrame: true,\n        theme: 'light'\n      });\n    } catch (error) {\n      console.error('[Safe Area Simulator] Error creating phone frame overlay:', error);\n    }\n  }\n\n  private createHardwareRenderer(): void {\n    try {\n      // Clean up existing hardware renderer if it exists\n      if (this.hardwareRenderer) {\n        this.hardwareRenderer.destroy();\n      }\n      this.hardwareRenderer = new HardwareRegionsRenderer();\n      console.log('[Safe Area Simulator] Hardware regions renderer initialized');\n    } catch (error) {\n      console.error('[Safe Area Simulator] Error creating hardware renderer:', error);\n    }\n  }\n\n  private setupRouteObserver(): void {\n    // Watch for SPA route changes using History API\n    this.observeHistoryChanges();\n    \n    // Watch for URL changes\n    this.observeUrlChanges();\n    \n    // Watch for DOM mutations that might indicate route changes\n    this.observeDomChanges();\n    \n    // Setup periodic check for debug overlay integrity\n    this.setupPeriodicCheck();\n  }\n\n  private observeHistoryChanges(): void {\n    // Override pushState and replaceState to detect route changes\n    const originalPushState = history.pushState;\n    const originalReplaceState = history.replaceState;\n    \n    history.pushState = (...args: Parameters<typeof history.pushState>) => {\n      console.log('[Safe Area Simulator] pushState detected');\n      originalPushState.apply(history, args);\n      this.handleRouteChange();\n    };\n    \n    history.replaceState = (...args: Parameters<typeof history.replaceState>) => {\n      console.log('[Safe Area Simulator] replaceState detected');\n      originalReplaceState.apply(history, args);\n      this.handleRouteChange();\n    };\n    \n    // Listen for multiple navigation events\n    window.addEventListener('popstate', () => {\n      console.log('[Safe Area Simulator] popstate detected');\n      this.handleRouteChange();\n    });\n    \n    // Listen for hashchange events (for hash-based routing)\n    window.addEventListener('hashchange', () => {\n      console.log('[Safe Area Simulator] hashchange detected');\n      this.handleRouteChange();\n    });\n    \n    // Listen for focus events (user might navigate back to tab)\n    window.addEventListener('focus', () => {\n      console.log('[Safe Area Simulator] window focus detected');\n      this.handleRouteChange();\n    });\n  }\n\n  private observeUrlChanges(): void {\n    let lastUrl = location.href;\n    let lastPathname = location.pathname;\n    let lastHash = location.hash;\n    \n    // Check for URL changes more frequently\n    setInterval(() => {\n      const currentUrl = location.href;\n      const currentPathname = location.pathname;\n      const currentHash = location.hash;\n      \n      if (currentUrl !== lastUrl || currentPathname !== lastPathname || currentHash !== lastHash) {\n        console.log('[Safe Area Simulator] Route change detected:', { from: lastUrl, to: currentUrl });\n        lastUrl = currentUrl;\n        lastPathname = currentPathname;\n        lastHash = currentHash;\n        this.handleRouteChange();\n      }\n    }, 100); // Check every 100ms for more responsive detection\n  }\n\n  private observeDomChanges(): void {\n    // Use MutationObserver to detect significant DOM changes\n    this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n      let shouldRecreate = false;\n      let shouldRecreateDebugOverlay = false;\n      \n      mutations.forEach((mutation) => {\n        // Check for body or root element changes\n        if (mutation.type === 'childList') {\n          mutation.removedNodes.forEach((node) => {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              const element = node as Element;\n              \n              // Check if body was removed/replaced\n              if (element.tagName === 'BODY' || element.contains(document.body)) {\n                console.log('[Safe Area Simulator] Body element change detected');\n                shouldRecreate = true;\n              }\n              \n              // Check if documentElement's children were modified\n              if (element.parentNode === document.documentElement) {\n                console.log('[Safe Area Simulator] DocumentElement child change detected');\n                shouldRecreateDebugOverlay = true;\n              }\n              \n              // Check if our debug overlay was removed\n              if (element.classList?.contains('safe-area-simulator-debug')) {\n                console.log('[Safe Area Simulator] Debug overlay directly removed');\n                shouldRecreateDebugOverlay = true;\n              }\n              \n              // Check if any removed element contains our debug overlay\n              if (element.querySelector && element.querySelector('.safe-area-simulator-debug')) {\n                console.log('[Safe Area Simulator] Container with debug overlay removed');\n                shouldRecreateDebugOverlay = true;\n              }\n            }\n          });\n          \n          // Also check added nodes for framework re-renders\n          mutation.addedNodes.forEach((node) => {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              const element = node as Element;\n              \n              // If a new body or major container was added, ensure overlay exists\n              if (element.tagName === 'BODY' || element.tagName === 'MAIN' || element.id === 'root' || element.id === 'app') {\n                console.log('[Safe Area Simulator] Major container added, checking overlay');\n                shouldRecreateDebugOverlay = true;\n              }\n            }\n          });\n          \n          // Check if our phone frame overlay was removed\n          if (this.phoneFrameOverlay?.overlayElement && !document.body.contains(this.phoneFrameOverlay.overlayElement)) {\n            shouldRecreate = true;\n          }\n        }\n      });\n      \n      // Handle debug overlay recreation immediately if needed\n      if (shouldRecreateDebugOverlay && this.isEnabled) {\n        console.log('[Safe Area Simulator] Triggering debug overlay recreation');\n        // Immediate synchronous recreation for critical scenarios\n        this.updateDebugOverlay();\n        // Also trigger debounced recreation as backup\n        this.debouncedRecreateDebugOverlay();\n      }\n      \n      if (shouldRecreate) {\n        // Debounce the recreation to avoid rapid recreation\n        if (this.routeChangeTimeout) {\n          clearTimeout(this.routeChangeTimeout);\n        }\n        this.routeChangeTimeout = window.setTimeout(() => {\n          this.recreateOverlay();\n        }, 100);\n      }\n    });\n    \n    this.observer.observe(document.documentElement, {\n      childList: true,\n      subtree: true,\n      attributes: false\n    });\n  }\n\n  private setupPeriodicCheck(): void {\n    // High-frequency check for debug overlay integrity\n    setInterval(() => {\n      if (this.isEnabled && (this.currentInsets.top > 0 || this.currentInsets.bottom > 0 || this.currentInsets.left > 0 || this.currentInsets.right > 0)) {\n        const existingOverlay = document.querySelector('.safe-area-simulator-debug');\n        if (!existingOverlay) {\n          console.log('[Safe Area Simulator] Debug overlay missing, recreating...');\n          this.updateDebugOverlay();\n        }\n      }\n    }, 100); // Check every 100ms for much faster recovery\n    \n    // Additional requestAnimationFrame-based check for maximum responsiveness\n    const animationFrameCheck = () => {\n      if (this.isEnabled && (this.currentInsets.top > 0 || this.currentInsets.bottom > 0 || this.currentInsets.left > 0 || this.currentInsets.right > 0)) {\n        const existingOverlay = document.querySelector('.safe-area-simulator-debug');\n        if (!existingOverlay) {\n          this.updateDebugOverlay();\n        }\n      }\n      requestAnimationFrame(animationFrameCheck);\n    };\n    requestAnimationFrame(animationFrameCheck);\n  }\n\n  private debouncedRecreateDebugOverlay(): void {\n    // Clear any existing recreation timeout to prevent rapid recreation\n    if (this.overlayRecreationTimeout) {\n      clearTimeout(this.overlayRecreationTimeout);\n    }\n    \n    // Immediate recreation for critical scenarios - no debouncing delay\n    this.updateDebugOverlay();\n    \n    // Also schedule a follow-up check to ensure it sticks\n    this.overlayRecreationTimeout = window.setTimeout(() => {\n      this.updateDebugOverlay();\n    }, 10);\n  }\n\n  private handleRouteChange(): void {\n    console.log('[Safe Area Simulator] Handling route change');\n    \n    // Immediately check if overlay still exists\n    const existingOverlay = document.querySelector('.safe-area-simulator-debug');\n    if (this.isEnabled && !existingOverlay && (this.currentInsets.top > 0 || this.currentInsets.bottom > 0 || this.currentInsets.left > 0 || this.currentInsets.right > 0)) {\n      console.log('[Safe Area Simulator] Overlay missing after route change, recreating immediately');\n      this.updateDebugOverlay();\n    }\n    \n    // Delay recreation to allow SPA to finish rendering\n    if (this.routeChangeTimeout) {\n      clearTimeout(this.routeChangeTimeout);\n    }\n    this.routeChangeTimeout = window.setTimeout(() => {\n      this.recreateOverlay();\n      // Force update debug overlay after route change\n      this.updateDebugOverlay();\n    }, 100); // Reduced delay for faster response\n    \n    // Also check again after a longer delay in case the SPA does late rendering\n    setTimeout(() => {\n      const laterOverlay = document.querySelector('.safe-area-simulator-debug');\n      if (this.isEnabled && !laterOverlay && (this.currentInsets.top > 0 || this.currentInsets.bottom > 0 || this.currentInsets.left > 0 || this.currentInsets.right > 0)) {\n        console.log('[Safe Area Simulator] Late overlay check - recreating');\n        this.updateDebugOverlay();\n      }\n    }, 1000);\n  }\n\n  private recreateOverlay(): void {\n    // Only recreate if enabled and device is selected\n    if (!this.isEnabled || !this.currentDevice) return;\n    \n    // Recreate the phone frame overlay\n    if (this.phoneFrameOverlay) {\n      this.phoneFrameOverlay.destroy();\n    }\n    \n    // Ensure body exists\n    if (!document.body) {\n      setTimeout(() => this.recreateOverlay(), 100);\n      return;\n    }\n    \n    this.createPhoneFrameOverlay();\n    this.updatePhoneFrame();\n    \n    // Recreate hardware renderer\n    if (this.hardwareRenderer) {\n      this.hardwareRenderer.destroy();\n      this.hardwareRenderer = null;\n    }\n    this.createHardwareRenderer();\n    this.updateHardwareRegions();\n    \n    // Also recreate debug overlay if needed\n    this.updateDebugOverlay();\n  }\n\n  private createStyleElement(): void {\n    this.styleElement = document.createElement('style');\n    this.styleElement.id = 'safe-area-simulator-styles';\n    document.head.appendChild(this.styleElement);\n  }\n\n  private setupMessageListener(): void {\n    chrome.runtime.onMessage.addListener((\n      message: SafeAreaMessage, \n      _sender: chrome.runtime.MessageSender, \n      sendResponse: (response: any) => void\n    ) => {\n      if (message.action === 'updateSafeArea') {\n        this.isEnabled = message.enabled || false;\n        this.currentInsets = message.insets || { top: 0, bottom: 0, left: 0, right: 0 };\n        this.currentDevice = message.device || this.currentDevice;\n        \n        // Save device frame preference\n        if (message.showDeviceFrame !== undefined) {\n          chrome.storage.sync.set({ showDeviceFrame: message.showDeviceFrame });\n        }\n        \n        // Handle hardware regions setting\n        if (message.settings?.showHardwareRegions !== undefined) {\n          this.showHardwareRegions = message.settings.showHardwareRegions;\n          chrome.storage.sync.set({ showHardwareRegions: this.showHardwareRegions });\n        }\n        \n        this.updateStyles();\n        this.updatePhoneFrame();\n        this.updateHardwareRegions();\n        sendResponse({ success: true });\n      }\n      return true;\n    });\n  }\n\n  private injectInitialStyles(): void {\n    // Add base styles that might be useful for developers\n    const baseStyles = `\n/* Safe Area Simulator - Base Styles */\n.safe-area-simulator-debug {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  z-index: 999999;\n}\n\n.safe-area-simulator-debug::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-width: var(--safe-area-inset-top, 0) var(--safe-area-inset-right, 0) var(--safe-area-inset-bottom, 0) var(--safe-area-inset-left, 0);\n  background: \n    linear-gradient(to bottom, rgba(255, 59, 48, 0.1) 0, rgba(255, 59, 48, 0.1) var(--safe-area-inset-top, 0), transparent var(--safe-area-inset-top, 0)),\n    linear-gradient(to top, rgba(255, 59, 48, 0.1) 0, rgba(255, 59, 48, 0.1) var(--safe-area-inset-bottom, 0), transparent var(--safe-area-inset-bottom, 0)),\n    linear-gradient(to right, rgba(255, 59, 48, 0.1) 0, rgba(255, 59, 48, 0.1) var(--safe-area-inset-left, 0), transparent var(--safe-area-inset-left, 0)),\n    linear-gradient(to left, rgba(255, 59, 48, 0.1) 0, rgba(255, 59, 48, 0.1) var(--safe-area-inset-right, 0), transparent var(--safe-area-inset-right, 0));\n}\n\n/* Utility classes for developers */\n.safe-area-inset-top {\n  padding-top: env(safe-area-inset-top, var(--safe-area-inset-top, 0)) !important;\n}\n\n.safe-area-inset-bottom {\n  padding-bottom: env(safe-area-inset-bottom, var(--safe-area-inset-bottom, 0)) !important;\n}\n\n.safe-area-inset-left {\n  padding-left: env(safe-area-inset-left, var(--safe-area-inset-left, 0)) !important;\n}\n\n.safe-area-inset-right {\n  padding-right: env(safe-area-inset-right, var(--safe-area-inset-right, 0)) !important;\n}\n\n.safe-area-inset-all {\n  padding: \n    env(safe-area-inset-top, var(--safe-area-inset-top, 0))\n    env(safe-area-inset-right, var(--safe-area-inset-right, 0))\n    env(safe-area-inset-bottom, var(--safe-area-inset-bottom, 0))\n    env(safe-area-inset-left, var(--safe-area-inset-left, 0)) !important;\n}\n`;\n\n    if (this.styleElement) {\n      this.styleElement.textContent = baseStyles;\n    }\n    this.updateStyles();\n  }\n\n  private updateStyles(): void {\n    if (!this.styleElement) return;\n\n\n    const currentDevice = DEVICES[this.currentDevice || 'none'];\n\n    const { top, bottom, left, right } = this.isEnabled ? currentDevice.safeAreaInsets : { top: 0, bottom: 0, left: 0, right: 0 };\n\n    // Create CSS custom properties\n    const safeAreaStyles = `\n:root {\n  --safe-area-inset-top: ${top}px;\n  --safe-area-inset-bottom: ${bottom}px;\n  --safe-area-inset-left: ${left}px;\n  --safe-area-inset-right: ${right}px;\n}\n\n/* Override env() function for safe area insets */\nhtml {\n  --safe-area-inset-top: ${top}px;\n  --safe-area-inset-bottom: ${bottom}px;\n  --safe-area-inset-left: ${left}px;\n  --safe-area-inset-right: ${right}px;\n}\n`;\n\n    // Update existing styles\n    const existingStyles = this.styleElement.textContent || '';\n    const baseStylesMatch = existingStyles.match(/(\\/\\* Safe Area Simulator - Base Styles \\*\\/[\\s\\S]*?)(:root {|$)/);\n    \n    if (baseStylesMatch) {\n      const baseStyles = baseStylesMatch[1];\n      this.styleElement.textContent = baseStyles + safeAreaStyles;\n    } else {\n      this.styleElement.textContent += safeAreaStyles;\n    }\n\n    // Add or remove debug overlay\n    this.updateDebugOverlay();\n\n    // Update phone frame overlay\n    this.updatePhoneFrame();\n\n    // Update hardware regions\n    this.updateHardwareRegions();\n\n    // Dispatch custom event for websites that want to listen for safe area changes\n    const event = new CustomEvent('safeAreaInsetsChanged', {\n      detail: {\n        top,\n        bottom,\n        left,\n        right,\n        enabled: this.isEnabled\n      }\n    });\n    document.dispatchEvent(event);\n\n    // Log for debugging\n    if (this.isEnabled) {\n      console.log(`[Safe Area Simulator] Applied insets: top=${top}px, bottom=${bottom}px, left=${left}px, right=${right}px`);\n    } else {\n      console.log('[Safe Area Simulator] Disabled - insets reset to 0');\n    }\n  }\n\n  private updateHardwareRegions(): void {\n    if (!this.hardwareRenderer) return;\n    \n    try {\n      // Set visibility based on enabled state and showHardwareRegions setting\n      const shouldShow = this.isEnabled && this.showHardwareRegions && this.currentDevice;\n      this.hardwareRenderer.setVisible(shouldShow);\n      \n      if (shouldShow && this.currentDevice && DEVICES[this.currentDevice]) {\n        const device = DEVICES[this.currentDevice];\n        this.hardwareRenderer.updateDevice(device);\n        console.log(`[Safe Area Simulator] Updated hardware regions for ${device.name}`);\n      }\n    } catch (error) {\n      console.error('[Safe Area Simulator] Error updating hardware regions:', error);\n    }\n  }\n\n  private destroy(): void {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n    \n    if (this.debugOverlayObserver) {\n      this.debugOverlayObserver.disconnect();\n      this.debugOverlayObserver = null;\n    }\n    \n    if (this.routeChangeTimeout) {\n      clearTimeout(this.routeChangeTimeout);\n      this.routeChangeTimeout = null;\n    }\n    \n    if (this.overlayRecreationTimeout) {\n      clearTimeout(this.overlayRecreationTimeout);\n      this.overlayRecreationTimeout = null;\n    }\n    \n    if (this.phoneFrameOverlay) {\n      this.phoneFrameOverlay.destroy();\n      this.phoneFrameOverlay = null;\n    }\n    \n    if (this.hardwareRenderer) {\n      this.hardwareRenderer.destroy();\n      this.hardwareRenderer = null;\n    }\n    \n    if (this.styleElement) {\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n    \n    // Remove debug overlay from documentElement\n    const debugOverlays = document.querySelectorAll('.safe-area-simulator-debug');\n    debugOverlays.forEach(overlay => overlay.remove());\n  }\n\n  // Handle extension disable/unload\n  handleExtensionDisable(): void {\n    this.destroy();\n  }\n\n  private updatePhoneFrame(): void {\n    if (!this.phoneFrameOverlay) return;\n    \n    try {\n      chrome.storage.sync.get(['showDeviceFrame'], (result) => {\n        const showFrame = result.showDeviceFrame || false;\n        \n        if (this.isEnabled && this.currentDevice && showFrame) {\n          if (this.phoneFrameOverlay && typeof this.phoneFrameOverlay.updateDevice === 'function') {\n            const device = DEVICES[this.currentDevice || 'none'];\n            this.phoneFrameOverlay.updateDevice(this.currentDevice, device.safeAreaInsets);\n          }\n        } else {\n          if (this.phoneFrameOverlay && typeof this.phoneFrameOverlay.hide === 'function') {\n            this.phoneFrameOverlay.hide();\n          }\n        }\n      });\n    } catch (error) {\n      console.error('[Safe Area Simulator] Error updating phone frame:', error);\n    }\n  }\n\n  private updateDebugOverlay(): void {\n    const existingOverlay = document.querySelector('.safe-area-simulator-debug');\n    const shouldShowOverlay = this.isEnabled && (this.currentInsets.top > 0 || this.currentInsets.bottom > 0 || this.currentInsets.left > 0 || this.currentInsets.right > 0);\n    \n    if (shouldShowOverlay) {\n      if (!existingOverlay) {\n        console.log('[Safe Area Simulator] Creating new debug overlay');\n        const overlay = document.createElement('div');\n        overlay.className = 'safe-area-simulator-debug';\n        overlay.title = 'Safe Area Simulator - Visual Guide';\n        overlay.setAttribute('data-safe-area-overlay', 'true');\n        overlay.style.cssText = 'position: fixed !important; top: 0 !important; left: 0 !important; right: 0 !important; bottom: 0 !important; pointer-events: none !important; z-index: 999999 !important;';\n        \n        // Try multiple insertion strategies for maximum compatibility\n        let insertionSuccess = false;\n        \n        // Strategy 1: Insert into body first (more stable for SPAs)\n        if (document.body && !insertionSuccess) {\n          try {\n            document.body.appendChild(overlay);\n            insertionSuccess = true;\n            this.setupOverlayProtection();\n          } catch (error) {\n            console.warn('[Safe Area Simulator] Failed to insert overlay into body:', error);\n          }\n        }\n        \n        // Strategy 2: Insert before the first child of documentElement\n        if (!insertionSuccess && document.documentElement.firstChild) {\n          try {\n            document.documentElement.insertBefore(overlay, document.documentElement.firstChild);\n            insertionSuccess = true;\n            this.setupOverlayProtection();\n          } catch (error) {\n            console.warn('[Safe Area Simulator] Failed to insert overlay before first child:', error);\n          }\n        }\n        \n        // Strategy 3: Append to documentElement\n        if (!insertionSuccess) {\n          try {\n            document.documentElement.appendChild(overlay);\n            insertionSuccess = true;\n            this.setupOverlayProtection();\n          } catch (error) {\n            console.error('[Safe Area Simulator] All overlay insertion strategies failed:', error);\n          }\n        }\n        \n        if (!insertionSuccess) {\n          console.error('[Safe Area Simulator] Could not insert debug overlay into DOM');\n        }\n      }\n    } else {\n      if (existingOverlay) {\n        existingOverlay.remove();\n      }\n    }\n  }\n\n  private setupOverlayProtection(): void {\n    // Clear any existing observer\n    if (this.debugOverlayObserver) {\n      this.debugOverlayObserver.disconnect();\n    }\n    \n    this.debugOverlayObserver = new MutationObserver((mutations) => {\n      let overlayRemoved = false;\n      let containerRemoved = false;\n      let needsRecreation = false;\n      \n      mutations.forEach((mutation) => {\n        if (mutation.type === 'childList') {\n          mutation.removedNodes.forEach((node) => {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              const element = node as Element;\n              \n              // Check if our specific overlay was removed\n              if (element.classList?.contains('safe-area-simulator-debug')) {\n                overlayRemoved = true;\n              }\n              \n              // Check if container holding our overlay was removed\n              if (element.querySelector && element.querySelector('.safe-area-simulator-debug')) {\n                containerRemoved = true;\n              }\n              \n              // Check for body or documentElement changes\n              if (element.tagName === 'BODY' || element === document.documentElement) {\n                needsRecreation = true;\n              }\n            }\n          });\n        }\n      });\n      \n      if (overlayRemoved || containerRemoved || needsRecreation) {\n        console.log('[Safe Area Simulator] Overlay protection triggered, recreating overlay...');\n        // Immediate synchronous recreation\n        this.updateDebugOverlay();\n        // Also trigger debounced recreation as backup\n        this.debouncedRecreateDebugOverlay();\n      }\n    });\n    \n    // Observe both documentElement and body for maximum protection\n    this.debugOverlayObserver.observe(document.documentElement, {\n      childList: true,\n      subtree: true\n    });\n    \n    if (document.body) {\n      this.debugOverlayObserver.observe(document.body, {\n        childList: true,\n        subtree: false\n      });\n    }\n  }\n}","// #region snippet\nexport const browser = globalThis.browser?.runtime?.id\n  ? globalThis.browser\n  : globalThis.chrome;\n// #endregion snippet\n","import { browser as _browser } from \"@wxt-dev/browser\";\nexport const browser = _browser;\nexport {};\n","function print(method, ...args) {\n  if (import.meta.env.MODE === \"production\") return;\n  if (typeof args[0] === \"string\") {\n    const message = args.shift();\n    method(`[wxt] ${message}`, ...args);\n  } else {\n    method(\"[wxt]\", ...args);\n  }\n}\nexport const logger = {\n  debug: (...args) => print(console.debug, ...args),\n  log: (...args) => print(console.log, ...args),\n  warn: (...args) => print(console.warn, ...args),\n  error: (...args) => print(console.error, ...args)\n};\n","import { browser } from \"wxt/browser\";\nexport class WxtLocationChangeEvent extends Event {\n  constructor(newUrl, oldUrl) {\n    super(WxtLocationChangeEvent.EVENT_NAME, {});\n    this.newUrl = newUrl;\n    this.oldUrl = oldUrl;\n  }\n  static EVENT_NAME = getUniqueEventName(\"wxt:locationchange\");\n}\nexport function getUniqueEventName(eventName) {\n  return `${browser?.runtime?.id}:${import.meta.env.ENTRYPOINT}:${eventName}`;\n}\n","import { WxtLocationChangeEvent } from \"./custom-events.mjs\";\nexport function createLocationWatcher(ctx) {\n  let interval;\n  let oldUrl;\n  return {\n    /**\n     * Ensure the location watcher is actively looking for URL changes. If it's already watching,\n     * this is a noop.\n     */\n    run() {\n      if (interval != null) return;\n      oldUrl = new URL(location.href);\n      interval = ctx.setInterval(() => {\n        let newUrl = new URL(location.href);\n        if (newUrl.href !== oldUrl.href) {\n          window.dispatchEvent(new WxtLocationChangeEvent(newUrl, oldUrl));\n          oldUrl = newUrl;\n        }\n      }, 1e3);\n    }\n  };\n}\n","import { browser } from \"wxt/browser\";\nimport { logger } from \"../utils/internal/logger.mjs\";\nimport {\n  getUniqueEventName\n} from \"./internal/custom-events.mjs\";\nimport { createLocationWatcher } from \"./internal/location-watcher.mjs\";\nexport class ContentScriptContext {\n  constructor(contentScriptName, options) {\n    this.contentScriptName = contentScriptName;\n    this.options = options;\n    this.abortController = new AbortController();\n    if (this.isTopFrame) {\n      this.listenForNewerScripts({ ignoreFirstEvent: true });\n      this.stopOldScripts();\n    } else {\n      this.listenForNewerScripts();\n    }\n  }\n  static SCRIPT_STARTED_MESSAGE_TYPE = getUniqueEventName(\n    \"wxt:content-script-started\"\n  );\n  isTopFrame = window.self === window.top;\n  abortController;\n  locationWatcher = createLocationWatcher(this);\n  receivedMessageIds = /* @__PURE__ */ new Set();\n  get signal() {\n    return this.abortController.signal;\n  }\n  abort(reason) {\n    return this.abortController.abort(reason);\n  }\n  get isInvalid() {\n    if (browser.runtime.id == null) {\n      this.notifyInvalidated();\n    }\n    return this.signal.aborted;\n  }\n  get isValid() {\n    return !this.isInvalid;\n  }\n  /**\n   * Add a listener that is called when the content script's context is invalidated.\n   *\n   * @returns A function to remove the listener.\n   *\n   * @example\n   * browser.runtime.onMessage.addListener(cb);\n   * const removeInvalidatedListener = ctx.onInvalidated(() => {\n   *   browser.runtime.onMessage.removeListener(cb);\n   * })\n   * // ...\n   * removeInvalidatedListener();\n   */\n  onInvalidated(cb) {\n    this.signal.addEventListener(\"abort\", cb);\n    return () => this.signal.removeEventListener(\"abort\", cb);\n  }\n  /**\n   * Return a promise that never resolves. Useful if you have an async function that shouldn't run\n   * after the context is expired.\n   *\n   * @example\n   * const getValueFromStorage = async () => {\n   *   if (ctx.isInvalid) return ctx.block();\n   *\n   *   // ...\n   * }\n   */\n  block() {\n    return new Promise(() => {\n    });\n  }\n  /**\n   * Wrapper around `window.setInterval` that automatically clears the interval when invalidated.\n   */\n  setInterval(handler, timeout) {\n    const id = setInterval(() => {\n      if (this.isValid) handler();\n    }, timeout);\n    this.onInvalidated(() => clearInterval(id));\n    return id;\n  }\n  /**\n   * Wrapper around `window.setTimeout` that automatically clears the interval when invalidated.\n   */\n  setTimeout(handler, timeout) {\n    const id = setTimeout(() => {\n      if (this.isValid) handler();\n    }, timeout);\n    this.onInvalidated(() => clearTimeout(id));\n    return id;\n  }\n  /**\n   * Wrapper around `window.requestAnimationFrame` that automatically cancels the request when\n   * invalidated.\n   */\n  requestAnimationFrame(callback) {\n    const id = requestAnimationFrame((...args) => {\n      if (this.isValid) callback(...args);\n    });\n    this.onInvalidated(() => cancelAnimationFrame(id));\n    return id;\n  }\n  /**\n   * Wrapper around `window.requestIdleCallback` that automatically cancels the request when\n   * invalidated.\n   */\n  requestIdleCallback(callback, options) {\n    const id = requestIdleCallback((...args) => {\n      if (!this.signal.aborted) callback(...args);\n    }, options);\n    this.onInvalidated(() => cancelIdleCallback(id));\n    return id;\n  }\n  addEventListener(target, type, handler, options) {\n    if (type === \"wxt:locationchange\") {\n      if (this.isValid) this.locationWatcher.run();\n    }\n    target.addEventListener?.(\n      type.startsWith(\"wxt:\") ? getUniqueEventName(type) : type,\n      handler,\n      {\n        ...options,\n        signal: this.signal\n      }\n    );\n  }\n  /**\n   * @internal\n   * Abort the abort controller and execute all `onInvalidated` listeners.\n   */\n  notifyInvalidated() {\n    this.abort(\"Content script context invalidated\");\n    logger.debug(\n      `Content script \"${this.contentScriptName}\" context invalidated`\n    );\n  }\n  stopOldScripts() {\n    window.postMessage(\n      {\n        type: ContentScriptContext.SCRIPT_STARTED_MESSAGE_TYPE,\n        contentScriptName: this.contentScriptName,\n        messageId: Math.random().toString(36).slice(2)\n      },\n      \"*\"\n    );\n  }\n  verifyScriptStartedEvent(event) {\n    const isScriptStartedEvent = event.data?.type === ContentScriptContext.SCRIPT_STARTED_MESSAGE_TYPE;\n    const isSameContentScript = event.data?.contentScriptName === this.contentScriptName;\n    const isNotDuplicate = !this.receivedMessageIds.has(event.data?.messageId);\n    return isScriptStartedEvent && isSameContentScript && isNotDuplicate;\n  }\n  listenForNewerScripts(options) {\n    let isFirst = true;\n    const cb = (event) => {\n      if (this.verifyScriptStartedEvent(event)) {\n        this.receivedMessageIds.add(event.data.messageId);\n        const wasFirst = isFirst;\n        isFirst = false;\n        if (wasFirst && options?.ignoreFirstEvent) return;\n        this.notifyInvalidated();\n      }\n    };\n    addEventListener(\"message\", cb);\n    this.onInvalidated(() => removeEventListener(\"message\", cb));\n  }\n}\n"],"names":["definition","content","result","browser","_browser","print","logger"],"mappings":"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","x_google_ignoreList":[0,5,6,7,8,9,10]}