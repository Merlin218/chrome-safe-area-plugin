{"version":3,"file":"popup-6Z3F1GzI.js","sources":["../../../node_modules/wxt/dist/virtual/reload-html.mjs"],"sourcesContent":["function print(method, ...args) {\n  if (import.meta.env.MODE === \"production\") return;\n  if (typeof args[0] === \"string\") {\n    const message = args.shift();\n    method(`[wxt] ${message}`, ...args);\n  } else {\n    method(\"[wxt]\", ...args);\n  }\n}\nconst logger = {\n  debug: (...args) => print(console.debug, ...args),\n  log: (...args) => print(console.log, ...args),\n  warn: (...args) => print(console.warn, ...args),\n  error: (...args) => print(console.error, ...args)\n};\n\nlet ws;\nfunction getDevServerWebSocket() {\n  if (import.meta.env.COMMAND !== \"serve\")\n    throw Error(\n      \"Must be running WXT dev command to connect to call getDevServerWebSocket()\"\n    );\n  if (ws == null) {\n    const serverUrl = __DEV_SERVER_ORIGIN__;\n    logger.debug(\"Connecting to dev server @\", serverUrl);\n    ws = new WebSocket(serverUrl, \"vite-hmr\");\n    ws.addWxtEventListener = ws.addEventListener.bind(ws);\n    ws.sendCustom = (event, payload) => ws?.send(JSON.stringify({ type: \"custom\", event, payload }));\n    ws.addEventListener(\"open\", () => {\n      logger.debug(\"Connected to dev server\");\n    });\n    ws.addEventListener(\"close\", () => {\n      logger.debug(\"Disconnected from dev server\");\n    });\n    ws.addEventListener(\"error\", (event) => {\n      logger.error(\"Failed to connect to dev server\", event);\n    });\n    ws.addEventListener(\"message\", (e) => {\n      try {\n        const message = JSON.parse(e.data);\n        if (message.type === \"custom\") {\n          ws?.dispatchEvent(\n            new CustomEvent(message.event, { detail: message.data })\n          );\n        }\n      } catch (err) {\n        logger.error(\"Failed to handle message\", err);\n      }\n    });\n  }\n  return ws;\n}\n\nif (import.meta.env.COMMAND === \"serve\") {\n  try {\n    const ws = getDevServerWebSocket();\n    ws.addWxtEventListener(\"wxt:reload-page\", (event) => {\n      if (event.detail === location.pathname.substring(1)) location.reload();\n    });\n  } catch (err) {\n    logger.error(\"Failed to setup web socket connection with dev server\", err);\n  }\n}\n"],"names":["ws"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,MAAM,WAAW,MAAM;AAE9B,MAAI,OAAO,KAAK,CAAC,MAAM,UAAU;AAC/B,UAAM,UAAU,KAAK,MAAA;AACrB,WAAO,SAAS,OAAO,IAAI,GAAG,IAAI;AAAA,EACpC,OAAO;AACL,WAAO,SAAS,GAAG,IAAI;AAAA,EACzB;AACF;AACA,MAAM,SAAS;AAAA,EACb,OAAO,IAAI,SAAS,MAAM,QAAQ,OAAO,GAAG,IAAI;AAAA,EAChD,KAAK,IAAI,SAAS,MAAM,QAAQ,KAAK,GAAG,IAAI;AAAA,EAC5C,MAAM,IAAI,SAAS,MAAM,QAAQ,MAAM,GAAG,IAAI;AAAA,EAC9C,OAAO,IAAI,SAAS,MAAM,QAAQ,OAAO,GAAG,IAAI;AAClD;AAEA,IAAI;AACJ,SAAS,wBAAwB;AAK/B,MAAI,MAAM,MAAM;AACd,UAAM,YAAY;AAClB,WAAO,MAAM,8BAA8B,SAAS;AACpD,SAAK,IAAI,UAAU,WAAW,UAAU;AACxC,OAAG,sBAAsB,GAAG,iBAAiB,KAAK,EAAE;AACpD,OAAG,aAAa,CAAC,OAAO,YAAY,IAAI,KAAK,KAAK,UAAU,EAAE,MAAM,UAAU,OAAO,QAAA,CAAS,CAAC;AAC/F,OAAG,iBAAiB,QAAQ,MAAM;AAChC,aAAO,MAAM,yBAAyB;AAAA,IACxC,CAAC;AACD,OAAG,iBAAiB,SAAS,MAAM;AACjC,aAAO,MAAM,8BAA8B;AAAA,IAC7C,CAAC;AACD,OAAG,iBAAiB,SAAS,CAAC,UAAU;AACtC,aAAO,MAAM,mCAAmC,KAAK;AAAA,IACvD,CAAC;AACD,OAAG,iBAAiB,WAAW,CAAC,MAAM;AACpC,UAAI;AACF,cAAM,UAAU,KAAK,MAAM,EAAE,IAAI;AACjC,YAAI,QAAQ,SAAS,UAAU;AAC7B,cAAI;AAAA,YACF,IAAI,YAAY,QAAQ,OAAO,EAAE,QAAQ,QAAQ,MAAM;AAAA,UAAA;AAAA,QAE3D;AAAA,MACF,SAAS,KAAK;AACZ,eAAO,MAAM,4BAA4B,GAAG;AAAA,MAC9C;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAO;AACT;AAEyC;AACvC,MAAI;AACF,UAAMA,MAAK,sBAAA;AACXA,QAAG,oBAAoB,mBAAmB,CAAC,UAAU;AACnD,UAAI,MAAM,WAAW,SAAS,SAAS,UAAU,CAAC,YAAY,OAAA;AAAA,IAChE,CAAC;AAAA,EACH,SAAS,KAAK;AACZ,WAAO,MAAM,yDAAyD,GAAG;AAAA,EAC3E;AACF;","x_google_ignoreList":[0]}