{"version":3,"file":"content.js","sources":["../../../node_modules/wxt/dist/utils/define-content-script.mjs","../../../src/shared/devices.ts","../../../src/phone-frame-simple.ts","../../../src/hardware-renderer.ts","../../../entrypoints/content.ts","../../../node_modules/wxt/dist/browser.mjs","../../../node_modules/@wxt-dev/browser/src/index.mjs","../../../node_modules/wxt/dist/utils/internal/logger.mjs","../../../node_modules/wxt/dist/utils/internal/custom-events.mjs","../../../node_modules/wxt/dist/utils/internal/location-watcher.mjs","../../../node_modules/wxt/dist/utils/content-script-context.mjs"],"sourcesContent":["export function defineContentScript(definition) {\n  return definition;\n}\n","// Device safe area insets configuration with physical appearance\nimport type { DevicesCollection } from '../../types/global.js';\n\nexport const DEVICES: DevicesCollection = {\n  none: {\n    name: \"None (Default)\",\n    safeAreaInsets: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 0,\n      height: 0,\n      screenWidth: 0,\n      screenHeight: 0,\n      borderRadius: 0,\n      screenRadius: 0,\n      notch: {\n        type: \"none\"\n      },\n      homeIndicator: null,\n      colors: [],\n      brand: \"custom\",\n      show: false\n    }\n  },\n  iphone14: {\n    name: \"iPhone 14\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 146.7,\n      height: 284,\n      screenWidth: 390,\n      screenHeight: 844,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 30,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#1f1f1f\", \"#2d2d2d\", \"#3a3a3a\"],\n      brand: \"apple\"\n    }\n  },\n  iphone14Pro: {\n    name: \"iPhone 14 Pro\",\n    safeAreaInsets: {\n      top: 59,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 147.5,\n      height: 285,\n      screenWidth: 393,\n      screenHeight: 852,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 32,\n        height: 8,\n        radius: 4,\n        color: \"#000000\",\n        shadow: true,\n        borderRadius: \"4px\"\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#2c2c2e\", \"#3a3a3c\", \"#48484a\"],\n      brand: \"apple\",\n      frameImage: {\n        light: \"iphone14-pro-light.png\",\n        dark: \"iphone14-pro-dark.png\",\n        hasDynamicIsland: true,\n        hasHomeIndicator: true,\n        screenOffset: { x: 8.25, y: 12, width: 131, height: 261 }\n      },\n      hardwareRegions: [\n        {\n          type: \"dynamic-island\",\n          position: { x: 133, y: 10, width: 126, height: 30 },\n          style: {\n            backgroundColor: \"#000000\",\n            borderRadius: \"15px\",\n            boxShadow: \"inset 0 1px 3px rgba(255,255,255,0.1), 0 1px 6px rgba(0,0,0,0.4)\",\n            opacity: 0.98,\n            zIndex: 1000001\n          },\n          content: {\n            type: \"sensors\",\n            elements: [\n              {\n                type: \"circle\",\n                x: 35,\n                y: 15,\n                radius: 5,\n                color: \"#1a1a1a\"\n              },\n              {\n                type: \"circle\",\n                x: 55,\n                y: 15,\n                radius: 3,\n                color: \"#2a2a2a\"\n              },\n              {\n                type: \"rect\",\n                x: 70,\n                y: 12,\n                width: 20,\n                height: 6,\n                color: \"#333333\"\n              }\n            ]\n          }\n        },\n        {\n          type: \"status-bar\",\n          position: { x: 8, y: 5, width: 50, height: 20 },\n          style: {\n            opacity: 0,\n            zIndex: 1000000\n          },\n          content: {\n            elements: [\n              { type: \"circle\", x: 10, y: 10, radius: 2, color: \"#ffffff\" },\n              { type: \"circle\", x: 18, y: 10, radius: 2, color: \"#ffffff\" },\n              { type: \"circle\", x: 26, y: 10, radius: 2, color: \"#ffffff\" }\n            ]\n          }\n        },\n        {\n          type: \"status-bar\",\n          position: { x: 190, y: 5, width: 50, height: 20 },\n          style: {\n            opacity: 0,\n            zIndex: 1000000\n          },\n          content: {\n            elements: [\n              {\n                type: \"rect\",\n                x: 25,\n                y: 8,\n                width: 20,\n                height: 10,\n                color: \"rgba(255,255,255,0.8)\"\n              }\n            ]\n          }\n        },\n        {\n          type: \"home-indicator\",\n          position: { x: 0, y: 0, width: 134, height: 5 },\n          style: {\n            backgroundColor: \"rgba(255, 255, 255, 0.6)\",\n            borderRadius: \"2.5px\",\n            opacity: 0.8,\n            zIndex: 1000001\n          }\n        }\n      ]\n    }\n  },\n  iphone14ProMax: {\n    name: \"iPhone 14 Pro Max\",\n    safeAreaInsets: {\n      top: 59,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 160.7,\n      height: 310,\n      screenWidth: 430,\n      screenHeight: 932,\n      borderRadius: 22,\n      screenRadius: 18,\n      notch: {\n        type: \"dynamic-island\",\n        width: 34,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 40,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#2c2c2e\", \"#3a3a3c\", \"#48484a\"],\n      brand: \"apple\"\n    }\n  },\n  iphoneX: {\n    name: \"iPhone X/XS\",\n    safeAreaInsets: {\n      top: 44,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 143.6,\n      height: 280,\n      screenWidth: 127,\n      screenHeight: 256,\n      borderRadius: 18,\n      screenRadius: 14,\n      notch: {\n        type: \"notch\",\n        width: 40,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#1f1f1f\", \"#2d2d2d\", \"#3a3a3a\"],\n      brand: \"apple\"\n    }\n  },\n  iphoneXR: {\n    name: \"iPhone XR/11\",\n    safeAreaInsets: {\n      top: 48,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 150.9,\n      height: 290,\n      screenWidth: 134,\n      screenHeight: 266,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"notch\",\n        width: 42,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 38,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#ff6b6b\", \"#ff8e8e\", \"#ffb3b3\"],\n      brand: \"apple\"\n    }\n  },\n  iphone12: {\n    name: \"iPhone 12/12 Pro\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 146.7,\n      height: 284,\n      screenWidth: 390,\n      screenHeight: 844,\n      borderRadius: 19,\n      screenRadius: 15,\n      notch: {\n        type: \"notch\",\n        width: 38,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#4a90e2\", \"#5ba0f2\", \"#6cb0ff\"],\n      brand: \"apple\"\n    }\n  },\n  iphone12Mini: {\n    name: \"iPhone 12 Mini\",\n    safeAreaInsets: {\n      top: 50,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 131.5,\n      height: 255,\n      screenWidth: 375,\n      screenHeight: 812,\n      borderRadius: 17,\n      screenRadius: 13,\n      notch: {\n        type: \"notch\",\n        width: 34,\n        height: 7,\n        radius: 3\n      },\n      homeIndicator: {\n        width: 32,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#50e3c2\", \"#70f3d2\", \"#90ffe2\"],\n      brand: \"apple\"\n    }\n  },\n  iphone12ProMax: {\n    name: \"iPhone 12 Pro Max\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 160.8,\n      height: 310,\n      screenWidth: 428,\n      screenHeight: 926,\n      borderRadius: 22,\n      screenRadius: 18,\n      notch: {\n        type: \"notch\",\n        width: 42,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 40,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#c9b037\", \"#d4c547\", \"#dfda57\"],\n      brand: \"apple\"\n    }\n  },\n  iphone13: {\n    name: \"iPhone 13\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 146.7,\n      height: 284,\n      screenWidth: 390,\n      screenHeight: 844,\n      borderRadius: 19,\n      screenRadius: 15,\n      notch: {\n        type: \"small-notch\",\n        width: 32,\n        height: 6,\n        radius: 3\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#ffc0cb\", \"#ffd0db\", \"#ffe0eb\"],\n      brand: \"apple\"\n    }\n  },\n  iphone13Mini: {\n    name: \"iPhone 13 Mini\",\n    safeAreaInsets: {\n      top: 50,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 131.5,\n      height: 255,\n      screenWidth: 375,\n      screenHeight: 812,\n      borderRadius: 17,\n      screenRadius: 13,\n      notch: {\n        type: \"small-notch\",\n        width: 28,\n        height: 6,\n        radius: 3\n      },\n      homeIndicator: {\n        width: 32,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#4169e1\", \"#5179f1\", \"#6189ff\"],\n      brand: \"apple\"\n    }\n  },\n  iphone13Pro: {\n    name: \"iPhone 13 Pro\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 147.5,\n      height: 285,\n      screenWidth: 390,\n      screenHeight: 844,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"small-notch\",\n        width: 32,\n        height: 6,\n        radius: 3\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#2c2c2e\", \"#3a3a3c\", \"#48484a\"],\n      brand: \"apple\"\n    }\n  },\n  iphone13ProMax: {\n    name: \"iPhone 13 Pro Max\",\n    safeAreaInsets: {\n      top: 47,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 160.8,\n      height: 310,\n      screenWidth: 428,\n      screenHeight: 926,\n      borderRadius: 22,\n      screenRadius: 18,\n      notch: {\n        type: \"small-notch\",\n        width: 34,\n        height: 6,\n        radius: 3\n      },\n      homeIndicator: {\n        width: 40,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#a7c0cd\", \"#b7d0dd\", \"#c7e0ed\"],\n      brand: \"apple\"\n    }\n  },\n  iphone15: {\n    name: \"iPhone 15\",\n    safeAreaInsets: {\n      top: 59,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 147.6,\n      height: 285,\n      screenWidth: 390,\n      screenHeight: 844,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 30,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#ffb3d9\", \"#ffc3e3\", \"#ffd3ed\"],\n      brand: \"apple\"\n    }\n  },\n  iphone15Pro: {\n    name: \"iPhone 15 Pro\",\n    safeAreaInsets: {\n      top: 59,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 146.6,\n      height: 284,\n      screenWidth: 393,\n      screenHeight: 852,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 32,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 36,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#d4af37\", \"#e4bf47\", \"#f4cf57\"],\n      brand: \"apple\"\n    }\n  },\n  iphone15ProMax: {\n    name: \"iPhone 15 Pro Max\",\n    safeAreaInsets: {\n      top: 59,\n      bottom: 34,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 159.9,\n      height: 309,\n      screenWidth: 430,\n      screenHeight: 932,\n      borderRadius: 22,\n      screenRadius: 18,\n      notch: {\n        type: \"dynamic-island\",\n        width: 34,\n        height: 8,\n        radius: 4\n      },\n      homeIndicator: {\n        width: 40,\n        height: 2,\n        radius: 1\n      },\n      colors: [\"#708090\", \"#8090a0\", \"#90a0b0\"],\n      brand: \"apple\",\n      frameImage: {\n        light: \"iphone15-promax-light.png\",\n        dark: \"iphone15-promax-dark.png\",\n        hasDynamicIsland: true,\n        hasHomeIndicator: true,\n        screenOffset: { x: 8.5, y: 12, width: 143, height: 285 }\n      }\n    }\n  },\n  // Android devices with realistic appearance\n  pixelXL: {\n    name: \"Google Pixel XL\",\n    safeAreaInsets: {\n      top: 24,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 154.7,\n      height: 295,\n      screenWidth: 138,\n      screenHeight: 271,\n      borderRadius: 8,\n      screenRadius: 4,\n      notch: {\n        type: \"none\"\n      },\n      homeIndicator: null,\n      colors: [\"#34495e\", \"#4a6275\", \"#607a8c\"],\n      brand: \"google\"\n    }\n  },\n  pixel3XL: {\n    name: \"Google Pixel 3 XL\",\n    safeAreaInsets: {\n      top: 28,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 158,\n      height: 300,\n      screenWidth: 142,\n      screenHeight: 276,\n      borderRadius: 12,\n      screenRadius: 8,\n      notch: {\n        type: \"notch\",\n        width: 36,\n        height: 6,\n        radius: 3\n      },\n      homeIndicator: null,\n      colors: [\"#1a1a1a\", \"#2a2a2a\", \"#3a3a3a\"],\n      brand: \"google\"\n    }\n  },\n  pixel4: {\n    name: \"Google Pixel 4\",\n    safeAreaInsets: {\n      top: 28,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 147.1,\n      height: 280,\n      screenWidth: 131,\n      screenHeight: 256,\n      borderRadius: 10,\n      screenRadius: 6,\n      notch: {\n        type: \"forehead\",\n        width: 131,\n        height: 6,\n        radius: 0\n      },\n      homeIndicator: null,\n      colors: [\"#ffffff\", \"#f5f5f5\", \"#ebebeb\"],\n      brand: \"google\"\n    }\n  },\n  samsungS21: {\n    name: \"Samsung Galaxy S21\",\n    safeAreaInsets: {\n      top: 28,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 151.7,\n      height: 290,\n      screenWidth: 135,\n      screenHeight: 266,\n      borderRadius: 16,\n      screenRadius: 12,\n      notch: {\n        type: \"punch-hole\",\n        width: 8,\n        height: 8,\n        radius: 4,\n        position: \"center-top\"\n      },\n      homeIndicator: null,\n      colors: [\"#9b59b6\", \"#ae6fc6\", \"#c185d6\"],\n      brand: \"samsung\"\n    }\n  },\n  samsungS22: {\n    name: \"Samsung Galaxy S22\",\n    safeAreaInsets: {\n      top: 32,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    appearance: {\n      width: 146,\n      height: 285,\n      screenWidth: 360,\n      screenHeight: 780,\n      borderRadius: 16,\n      screenRadius: 12,\n      notch: {\n        type: \"punch-hole\",\n        width: 8,\n        height: 8,\n        radius: 4,\n        position: \"center-top\",\n        color: \"#000000\",\n        shadow: true\n      },\n      homeIndicator: null,\n      colors: [\"#2ecc71\", \"#4ed681\", \"#6ee091\"],\n      brand: \"samsung\",\n      frameImage: {\n        light: \"samsung-s22-light.png\",\n        dark: \"samsung-s22-dark.png\",\n        hasDynamicIsland: false,\n        hasHomeIndicator: false,\n        screenOffset: { x: 8, y: 12, width: 130, height: 261 }\n      },\n      hardwareRegions: [\n        {\n          type: \"camera-cutout\",\n          position: { x: 168, y: 15, width: 24, height: 24 },\n          style: {\n            backgroundColor: \"#000000\",\n            borderRadius: \"50%\",\n            boxShadow: \"0 0 8px rgba(0,0,0,0.6), inset 0 1px 3px rgba(255,255,255,0.1)\",\n            opacity: 0.98,\n            zIndex: 1000001\n          },\n          content: {\n            type: \"camera\",\n            elements: [\n              {\n                type: \"circle\",\n                x: 12,\n                y: 12,\n                radius: 8,\n                color: \"#1a1a1a\"\n              },\n              {\n                type: \"circle\",\n                x: 12,\n                y: 12,\n                radius: 4,\n                color: \"#333333\"\n              }\n            ]\n          }\n        },\n        {\n          type: \"status-bar\",\n          position: { x: 8, y: 5, width: 110, height: 20 },\n          style: {\n            opacity: 0,\n            zIndex: 1000000\n          },\n          content: {\n            elements: [\n              { type: \"circle\", x: 10, y: 10, radius: 2, color: \"#ffffff\" },\n              { type: \"circle\", x: 18, y: 10, radius: 2, color: \"#ffffff\" },\n              { type: \"circle\", x: 26, y: 10, radius: 2, color: \"#ffffff\" }\n            ]\n          }\n        },\n        {\n          type: \"status-bar\",\n          position: { x: 150, y: 5, width: 80, height: 20 },\n          style: {\n            opacity: 0,\n            zIndex: 1000000\n          },\n          content: {\n            elements: [\n              {\n                type: \"rect\",\n                x: 50,\n                y: 8,\n                width: 20,\n                height: 10,\n                color: \"rgba(255,255,255,0.8)\"\n              }\n            ]\n          }\n        },\n        {\n          type: \"navigation-bar\",\n          position: { x: 0, y: 0, width: 130, height: 48 },\n          style: {\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n            opacity: 0.6,\n            zIndex: 1000000\n          },\n          content: {\n            elements: [\n              {\n                type: \"circle\",\n                x: 32,\n                y: 24,\n                radius: 6,\n                color: \"rgba(255,255,255,0.7)\"\n              },\n              {\n                type: \"circle\",\n                x: 65,\n                y: 24,\n                radius: 8,\n                color: \"rgba(255,255,255,0.7)\"\n              },\n              {\n                type: \"rect\",\n                x: 90,\n                y: 20,\n                width: 16,\n                height: 8,\n                color: \"rgba(255,255,255,0.7)\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  },\n  // Landscape orientation variations\n  iphone14Landscape: {\n    name: \"iPhone 14 (Landscape)\",\n    safeAreaInsets: {\n      top: 0,\n      bottom: 21,\n      left: 47,\n      right: 47\n    },\n    appearance: {\n      width: 284,\n      height: 146.7,\n      screenWidth: 260,\n      screenHeight: 130,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 8,\n        height: 30,\n        radius: 4,\n        position: \"left\"\n      },\n      homeIndicator: {\n        width: 2,\n        height: 36,\n        radius: 1,\n        position: \"bottom\"\n      },\n      colors: [\"#1f1f1f\", \"#2d2d2d\", \"#3a3a3a\"],\n      brand: \"apple\",\n      orientation: \"landscape\"\n    }\n  },\n  iphone14ProLandscape: {\n    name: \"iPhone 14 Pro (Landscape)\",\n    safeAreaInsets: {\n      top: 0,\n      bottom: 21,\n      left: 59,\n      right: 59\n    },\n    appearance: {\n      width: 285,\n      height: 147.5,\n      screenWidth: 261,\n      screenHeight: 131,\n      borderRadius: 20,\n      screenRadius: 16,\n      notch: {\n        type: \"dynamic-island\",\n        width: 8,\n        height: 32,\n        radius: 4,\n        position: \"left\"\n      },\n      homeIndicator: {\n        width: 2,\n        height: 36,\n        radius: 1,\n        position: \"bottom\"\n      },\n      colors: [\"#2c2c2e\", \"#3a3a3c\", \"#48484a\"],\n      brand: \"apple\",\n      orientation: \"landscape\"\n    }\n  }\n};\n\nexport default DEVICES;","// PhoneFrameSimple implementation for Chrome extension\nimport type { SafeAreaInsets } from '../types/global.js';\n\nclass PhoneFrameSimple {\n  public overlayElement: HTMLElement | null = null;\n  private options: any;\n\n  constructor(options: any = {}) {\n    this.options = {\n      scale: 0.4,\n      showSafeArea: true,\n      showDeviceFrame: true,\n      theme: 'light',\n      ...options\n    };\n    console.log('[Safe Area Simulator] PhoneFrameSimple initialized');\n  }\n\n  destroy(): void {\n    if (this.overlayElement && this.overlayElement.parentNode) {\n      this.overlayElement.parentNode.removeChild(this.overlayElement);\n    }\n    this.overlayElement = null;\n  }\n\n  updateDevice(device: string, insets: SafeAreaInsets): void {\n    console.log('[Safe Area Simulator] PhoneFrameSimple device updated:', device, insets);\n    // Basic implementation for visual feedback\n    // In a full implementation, this would create device frame overlay\n  }\n\n  hide(): void {\n    if (this.overlayElement) {\n      this.overlayElement.style.display = 'none';\n    }\n  }\n\n  show(): void {\n    if (this.overlayElement) {\n      this.overlayElement.style.display = 'block';\n    }\n  }\n}\n\n// Export for module systems\nexport { PhoneFrameSimple };\nexport default PhoneFrameSimple; ","// Hardware regions renderer for realistic device simulation\n/// <reference types=\"chrome\" />\nimport type { HardwareRegion, Device } from '../types/global.js';\n\nexport class HardwareRegionsRenderer {\n  private container: HTMLElement | null = null;\n  private regions: HardwareRegion[] = [];\n  private isVisible: boolean = true;\n\n  constructor() {\n    this.init();\n  }\n\n  private init(): void {\n    this.createContainer();\n  }\n\n  private createContainer(): void {\n    // Remove existing container\n    this.removeContainer();\n    \n    this.container = document.createElement('div');\n    this.container.id = 'safe-area-hardware-regions';\n    this.container.className = 'safe-area-hardware-regions';\n    \n    // Base styles for the hardware regions container\n    this.container.style.cssText = `\n      position: fixed !important;\n      top: 0 !important;\n      left: 0 !important;\n      right: 0 !important;\n      bottom: 0 !important;\n      pointer-events: none !important;\n      z-index: 999998 !important;\n      display: ${this.isVisible ? 'block' : 'none'} !important;\n    `;\n    \n    // Try to append to body, fallback to documentElement\n    if (document.body) {\n      document.body.appendChild(this.container);\n    } else if (document.documentElement) {\n      document.documentElement.appendChild(this.container);\n    }\n  }\n\n  public setVisible(visible: boolean): void {\n    this.isVisible = visible;\n    if (this.container) {\n      this.container.style.display = visible ? 'block' : 'none';\n    }\n  }\n\n  public updateDevice(device: Device): void {\n    if (!device.appearance.hardwareRegions) {\n      this.generateHardwareRegions(device);\n    } else {\n      this.regions = device.appearance.hardwareRegions;\n    }\n    this.renderRegions();\n  }\n\n  private generateHardwareRegions(device: Device): void {\n    const regions: HardwareRegion[] = [];\n    const { appearance } = device;\n    const viewport = this.getViewportSize();\n    \n    // Calculate scaling factor to fit screen\n    const scaleX = viewport.width / appearance.screenWidth;\n    const scaleY = viewport.height / appearance.screenHeight;\n    const scale = Math.min(scaleX, scaleY);\n\n    // Generate Dynamic Island\n    if (appearance.notch.type === 'dynamic-island') {\n      regions.push(this.createDynamicIslandRegion(appearance, scale, viewport));\n    }\n    \n    // Generate traditional notch\n    if (appearance.notch.type === 'notch' || appearance.notch.type === 'small-notch') {\n      regions.push(this.createNotchRegion(appearance, scale, viewport));\n    }\n    \n    // Generate punch hole (for Samsung devices)\n    if (appearance.notch.type === 'punch-hole') {\n      regions.push(this.createPunchHoleRegion(appearance, scale, viewport));\n    }\n    \n    // Generate home indicator\n    if (appearance.homeIndicator) {\n      regions.push(this.createHomeIndicatorRegion(appearance, scale, viewport));\n    }\n    \n    // Generate status bar area\n    if (appearance.brand === 'apple' && appearance.notch.type !== 'none') {\n      regions.push(...this.createStatusBarRegions(appearance, scale, viewport));\n    }\n\n    this.regions = regions;\n  }\n\n  private createDynamicIslandRegion(appearance: any, scale: number, viewport: any): HardwareRegion {\n    const island = appearance.notch;\n    const centerX = viewport.width / 2;\n    const topOffset = 15;\n    \n    // Create a proper Dynamic Island - single unified element\n    const islandWidth = 120; // Fixed width for better visibility\n    const islandHeight = 30;  // Fixed height\n    \n    return {\n      type: 'dynamic-island',\n      position: {\n        x: centerX - islandWidth / 2,\n        y: topOffset,\n        width: islandWidth,\n        height: islandHeight\n      },\n      style: {\n        backgroundColor: '#000000',\n        borderRadius: '15px', // Perfect pill shape\n        boxShadow: 'inset 0 1px 3px rgba(255,255,255,0.1), 0 2px 8px rgba(0,0,0,0.4)',\n        opacity: 0.98,\n        zIndex: 1000001\n      },\n      content: {\n        type: 'sensors',\n        elements: [\n          // Front camera (left side)\n          {\n            type: 'circle',\n            x: 25,\n            y: 15,\n            radius: 5,\n            color: '#1a1a1a'\n          },\n          // Face ID sensors (tiny dots)\n          {\n            type: 'circle',\n            x: 40,\n            y: 12,\n            radius: 1.5,\n            color: '#333333'\n          },\n          {\n            type: 'circle',\n            x: 45,\n            y: 18,\n            radius: 1,\n            color: '#333333'\n          },\n          {\n            type: 'circle',\n            x: 50,\n            y: 15,\n            radius: 1,\n            color: '#333333'\n          },\n          // Speaker grille (center-right)\n          {\n            type: 'rect',\n            x: 60,\n            y: 12,\n            width: 30,\n            height: 6,\n            color: '#2a2a2a',\n            borderRadius: '3px'\n          },\n          // Proximity sensor (far right)\n          {\n            type: 'circle',\n            x: 95,\n            y: 15,\n            radius: 3,\n            color: '#1a1a1a'\n          }\n        ]\n      }\n    };\n  }\n\n  private createNotchRegion(appearance: any, scale: number, viewport: any): HardwareRegion {\n    const notch = appearance.notch;\n    const centerX = viewport.width / 2;\n    \n    return {\n      type: 'notch',\n      position: {\n        x: centerX - (notch.width * scale) / 2,\n        y: 0,\n        width: notch.width * scale,\n        height: notch.height * scale\n      },\n      style: {\n        backgroundColor: '#000000',\n        borderRadius: `0 0 ${notch.radius * scale}px ${notch.radius * scale}px`,\n        opacity: 0.98,\n        zIndex: 999999\n      },\n      content: {\n        type: 'sensors',\n        elements: [\n          // Speaker grille\n          {\n            type: 'rect',\n            x: (notch.width * scale) * 0.35,\n            y: (notch.height * scale) * 0.3,\n            width: (notch.width * scale) * 0.3,\n            height: (notch.height * scale) * 0.15,\n            color: '#333333'\n          },\n          // Camera\n          {\n            type: 'circle',\n            x: (notch.width * scale) * 0.2,\n            y: (notch.height * scale) * 0.5,\n            radius: (notch.height * scale) * 0.2,\n            color: '#1a1a1a'\n          },\n          // Sensors\n          {\n            type: 'dot',\n            x: (notch.width * scale) * 0.8,\n            y: (notch.height * scale) * 0.5,\n            width: 2 * scale,\n            height: 2 * scale,\n            color: '#444444'\n          }\n        ]\n      }\n    };\n  }\n\n  private createPunchHoleRegion(appearance: any, scale: number, viewport: any): HardwareRegion {\n    const punchHole = appearance.notch;\n    const centerX = viewport.width / 2;\n    const topOffset = 15 * scale;\n    \n    return {\n      type: 'camera-cutout',\n      position: {\n        x: centerX - (punchHole.width * scale) / 2,\n        y: topOffset,\n        width: punchHole.width * scale,\n        height: punchHole.height * scale\n      },\n      style: {\n        backgroundColor: '#000000',\n        borderRadius: '50%',\n        boxShadow: '0 0 8px rgba(0,0,0,0.5)',\n        opacity: 0.95,\n        zIndex: 999999\n      },\n      content: {\n        type: 'camera',\n        elements: [\n          {\n            type: 'circle',\n            x: (punchHole.width * scale) / 2,\n            y: (punchHole.height * scale) / 2,\n            radius: (punchHole.width * scale) * 0.3,\n            color: '#2a2a2a'\n          }\n        ]\n      }\n    };\n  }\n\n  private createHomeIndicatorRegion(appearance: any, scale: number, viewport: any): HardwareRegion {\n    const indicator = appearance.homeIndicator;\n    const centerX = viewport.width / 2;\n    const bottomOffset = 12;\n    \n    return {\n      type: 'home-indicator',\n      position: {\n        x: centerX - (indicator.width * 2) / 2,\n        y: viewport.height - bottomOffset - (indicator.height * 2),\n        width: indicator.width * 2,\n        height: indicator.height * 2\n      },\n      style: {\n        backgroundColor: '#000000', // iOS原生黑色\n        borderRadius: `${indicator.radius * 2}px`,\n        opacity: 0.9,\n        zIndex: 1000001,\n        boxShadow: '0 1px 3px rgba(0,0,0,0.4)' // 更深的阴影\n      }\n    };\n  }\n\n  private createStatusBarRegions(appearance: any, scale: number, viewport: any): HardwareRegion[] {\n    // No status bar regions - removed time display\n    return [];\n  }\n\n  private renderRegions(): void {\n    if (!this.container) {\n      this.createContainer();\n    }\n    \n    if (!this.container) return;\n    \n    // Clear existing regions\n    this.container.innerHTML = '';\n    \n    // Render each hardware region\n    this.regions.forEach(region => {\n      const element = this.createRegionElement(region);\n      if (element) {\n        this.container!.appendChild(element);\n      }\n    });\n  }\n\n  private createRegionElement(region: HardwareRegion): HTMLElement | null {\n    const element = document.createElement('div');\n    element.className = `hardware-region hardware-region-${region.type}`;\n    \n    // Apply position and basic styles\n    const style = {\n      position: 'absolute',\n      left: `${region.position.x}px`,\n      top: `${region.position.y}px`,\n      width: `${region.position.width}px`,\n      height: `${region.position.height}px`,\n      pointerEvents: 'none',\n      ...region.style\n    };\n    \n    Object.assign(element.style, style);\n    \n    // Add content elements if specified\n    if (region.content?.elements) {\n      region.content.elements.forEach(contentElement => {\n        const contentEl = this.createContentElement(contentElement);\n        if (contentEl) {\n          element.appendChild(contentEl);\n        }\n      });\n    }\n    \n    return element;\n  }\n\n  private createContentElement(content: any): HTMLElement | null {\n    const element = document.createElement('div');\n    element.className = `hardware-content hardware-content-${content.type}`;\n    \n    const baseStyle = {\n      position: 'absolute',\n      left: `${content.x}px`,\n      top: `${content.y}px`,\n      pointerEvents: 'none',\n      backgroundColor: content.color || 'transparent'\n    };\n    \n    switch (content.type) {\n      case 'text':\n        Object.assign(element.style, {\n          ...baseStyle,\n          width: `${content.width}px`,\n          height: `${content.height}px`,\n          color: content.color,\n          fontSize: '14px',\n          fontWeight: '600',\n          fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-start',\n          lineHeight: '1',\n          textShadow: '0 1px 2px rgba(0,0,0,0.3)',\n          backgroundColor: 'transparent'\n        });\n        element.textContent = content.content || '';\n        break;\n        \n      case 'circle':\n        Object.assign(element.style, {\n          ...baseStyle,\n          width: `${content.radius * 2}px`,\n          height: `${content.radius * 2}px`,\n          borderRadius: '50%',\n          transform: 'translate(-50%, -50%)'\n        });\n        break;\n        \n      case 'rect':\n        Object.assign(element.style, {\n          ...baseStyle,\n          width: `${content.width}px`,\n          height: `${content.height}px`,\n          borderRadius: content.borderRadius || '1px'\n        });\n        break;\n        \n      case 'dot':\n        Object.assign(element.style, {\n          ...baseStyle,\n          width: `${content.width}px`,\n          height: `${content.height}px`,\n          borderRadius: '50%'\n        });\n        break;\n        \n      case 'line':\n        Object.assign(element.style, {\n          ...baseStyle,\n          width: `${content.width}px`,\n          height: `${content.height}px`\n        });\n        break;\n    }\n    \n    return element;\n  }\n\n  private getViewportSize(): { width: number; height: number } {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  public removeContainer(): void {\n    // Remove our specific container instance\n    if (this.container) {\n      this.container.remove();\n      this.container = null;\n    }\n    \n    // Also clean up any orphaned containers with the same ID\n    const orphanedContainers = document.querySelectorAll('#safe-area-hardware-regions');\n    orphanedContainers.forEach(container => {\n      if (container !== this.container) {\n        container.remove();\n      }\n    });\n  }\n\n\n  public destroy(): void {\n    this.removeContainer();\n    this.regions = [];\n  }\n}","import type { SafeAreaInsets, SafeAreaMessage } from '../types/global.js';\nimport { DEVICES } from '../src/shared/devices.js';\nimport { createSafeAreaCSS, BASE_SAFE_AREA_STYLES, createSafeAreaEvent, debounce } from '../src/shared/utils.js';\nimport { PhoneFrameSimple } from '../src/phone-frame-simple.js';\nimport { HardwareRegionsRenderer } from '../src/hardware-renderer.js';\n\nexport default defineContentScript({\n  matches: ['<all_urls>'],\n  runAt: 'document_start',\n  main(ctx) {\n    console.log('Content script initialized');\n    \n    const injector = new SafeAreaInjector();\n    \n    // Clean up when the content script is invalidated\n    ctx.onInvalidated(() => {\n      injector.handleExtensionDisable();\n    });\n  }\n});\n\nclass SafeAreaInjector {\n  private isEnabled: boolean = false;\n  private currentDevice: string | null = null;\n  private currentInsets: SafeAreaInsets = { top: 0, bottom: 0, left: 0, right: 0 };\n  private styleElement: HTMLStyleElement | null = null;\n  private phoneFrameOverlay: PhoneFrameSimple | null = null;\n  private hardwareRenderer: HardwareRegionsRenderer | null = null;\n  private debugMode: boolean = false;\n  private showHardwareRegions: boolean = false;\n  private showDebugOverlay: boolean = true;\n  private observer: MutationObserver | null = null;\n  private routeChangeTimeout: number | null = null;\n  private debugOverlayObserver: MutationObserver | null = null;\n  private overlayRecreationTimeout: number | null = null;\n  \n  constructor() {\n    this.init();\n  }\n\n  private init(): void {\n    // Setup message listener immediately\n    this.setupMessageListener();\n    \n    // Wait for DOM to be ready for other operations\n    this.waitForDOM(() => {\n      this.loadStoredState();\n      this.createStyleElement();\n      this.injectInitialStyles();\n      this.createPhoneFrameOverlay();\n      this.createHardwareRenderer();\n      this.setupRouteObserver();\n    });\n  }\n\n  private waitForDOM(callback: () => void): void {\n    if (document.head && document.body) {\n      callback();\n    } else if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', callback);\n    } else {\n      // DOM is ready but head/body might not be fully constructed\n      setTimeout(() => this.waitForDOM(callback), 10);\n    }\n  }\n\n  private async loadStoredState(): Promise<void> {\n    try {\n      const result = await chrome.storage.sync.get(['enabled', 'device', 'customInsets', 'showDeviceFrame', 'showHardwareRegions', 'showDebugOverlay', 'debugMode']);\n      this.isEnabled = result.enabled || false;\n      this.currentDevice = result.device || null;\n      this.debugMode = result.debugMode || false;\n      this.showHardwareRegions = result.showHardwareRegions !== false; // Default to true\n      this.showDebugOverlay = result.showDebugOverlay !== false; // Default to true\n      \n      if (this.isEnabled && result.device && DEVICES[result.device]) {\n        const device = DEVICES[result.device];\n        if (device) {\n          this.currentInsets = device.safeAreaInsets;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading stored state:', error);\n    }\n  }\n\n  private createPhoneFrameOverlay(): void {\n    try {\n      // Check if PhoneFrameSimple class is available\n      if (typeof PhoneFrameSimple === 'undefined') {\n        console.warn('[Safe Area Simulator] PhoneFrameSimple class not available');\n        return;\n      }\n      \n      this.phoneFrameOverlay = new PhoneFrameSimple({\n        scale: 0.4,\n        showSafeArea: true,\n        showDeviceFrame: true,\n        theme: 'light'\n      });\n    } catch (error) {\n      console.error('[Safe Area Simulator] Error creating phone frame overlay:', error);\n    }\n  }\n\n  private createHardwareRenderer(): void {\n    try {\n      // Clean up existing hardware renderer if it exists\n      if (this.hardwareRenderer) {\n        this.hardwareRenderer.destroy();\n      }\n      this.hardwareRenderer = new HardwareRegionsRenderer();\n      console.log('[Safe Area Simulator] Hardware regions renderer initialized');\n    } catch (error) {\n      console.error('[Safe Area Simulator] Error creating hardware renderer:', error);\n    }\n  }\n\n  private setupRouteObserver(): void {\n    // Watch for SPA route changes using History API\n    this.observeHistoryChanges();\n    \n    // Watch for URL changes\n    this.observeUrlChanges();\n    \n    // Watch for DOM mutations that might indicate route changes\n    this.observeDomChanges();\n    \n    // Setup periodic check for debug overlay integrity\n    this.setupPeriodicCheck();\n  }\n\n  private observeHistoryChanges(): void {\n    // Override pushState and replaceState to detect route changes\n    const originalPushState = history.pushState;\n    const originalReplaceState = history.replaceState;\n    \n    history.pushState = (...args: Parameters<typeof history.pushState>) => {\n      console.log('[Safe Area Simulator] pushState detected');\n      originalPushState.apply(history, args);\n      this.handleRouteChange();\n    };\n    \n    history.replaceState = (...args: Parameters<typeof history.replaceState>) => {\n      console.log('[Safe Area Simulator] replaceState detected');\n      originalReplaceState.apply(history, args);\n      this.handleRouteChange();\n    };\n    \n    // Listen for multiple navigation events\n    window.addEventListener('popstate', () => {\n      console.log('[Safe Area Simulator] popstate detected');\n      this.handleRouteChange();\n    });\n    \n    // Listen for hashchange events (for hash-based routing)\n    window.addEventListener('hashchange', () => {\n      console.log('[Safe Area Simulator] hashchange detected');\n      this.handleRouteChange();\n    });\n    \n    // Listen for focus events (user might navigate back to tab)\n    window.addEventListener('focus', () => {\n      console.log('[Safe Area Simulator] window focus detected');\n      this.handleRouteChange();\n    });\n  }\n\n  private observeUrlChanges(): void {\n    let lastUrl = location.href;\n    let lastPathname = location.pathname;\n    let lastHash = location.hash;\n    \n    // Check for URL changes more frequently\n    setInterval(() => {\n      const currentUrl = location.href;\n      const currentPathname = location.pathname;\n      const currentHash = location.hash;\n      \n      if (currentUrl !== lastUrl || currentPathname !== lastPathname || currentHash !== lastHash) {\n        console.log('[Safe Area Simulator] Route change detected:', { from: lastUrl, to: currentUrl });\n        lastUrl = currentUrl;\n        lastPathname = currentPathname;\n        lastHash = currentHash;\n        this.handleRouteChange();\n      }\n    }, 100); // Check every 100ms for more responsive detection\n  }\n\n  private observeDomChanges(): void {\n    // Use MutationObserver to detect significant DOM changes\n    this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n      let shouldRecreate = false;\n      let shouldRecreateDebugOverlay = false;\n      \n      mutations.forEach((mutation) => {\n        // Check for body or root element changes\n        if (mutation.type === 'childList') {\n          mutation.removedNodes.forEach((node) => {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              const element = node as Element;\n              \n              // Check if body was removed/replaced\n              if (element.tagName === 'BODY' || element.contains(document.body)) {\n                console.log('[Safe Area Simulator] Body element change detected');\n                shouldRecreate = true;\n              }\n              \n              // Check if documentElement's children were modified\n              if (element.parentNode === document.documentElement) {\n                console.log('[Safe Area Simulator] DocumentElement child change detected');\n                shouldRecreateDebugOverlay = true;\n              }\n              \n              // Check if our debug overlay was removed\n              if (element.classList?.contains('safe-area-simulator-debug')) {\n                console.log('[Safe Area Simulator] Debug overlay directly removed');\n                shouldRecreateDebugOverlay = true;\n              }\n              \n              // Check if any removed element contains our debug overlay\n              if (element.querySelector && element.querySelector('.safe-area-simulator-debug')) {\n                console.log('[Safe Area Simulator] Container with debug overlay removed');\n                shouldRecreateDebugOverlay = true;\n              }\n            }\n          });\n          \n          // Also check added nodes for framework re-renders\n          mutation.addedNodes.forEach((node) => {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              const element = node as Element;\n              \n              // If a new body or major container was added, ensure overlay exists\n              if (element.tagName === 'BODY' || element.tagName === 'MAIN' || element.id === 'root' || element.id === 'app') {\n                console.log('[Safe Area Simulator] Major container added, checking overlay');\n                shouldRecreateDebugOverlay = true;\n              }\n            }\n          });\n          \n          // Check if our phone frame overlay was removed\n          if (this.phoneFrameOverlay?.overlayElement && !document.body.contains(this.phoneFrameOverlay.overlayElement)) {\n            shouldRecreate = true;\n          }\n        }\n      });\n      \n      // Handle debug overlay recreation immediately if needed\n      if (shouldRecreateDebugOverlay && this.isEnabled) {\n        console.log('[Safe Area Simulator] Triggering debug overlay recreation');\n        // Immediate synchronous recreation for critical scenarios\n        this.updateDebugOverlay();\n        // Also trigger debounced recreation as backup\n        this.debouncedRecreateDebugOverlay();\n      }\n      \n      if (shouldRecreate) {\n        // Debounce the recreation to avoid rapid recreation\n        if (this.routeChangeTimeout) {\n          clearTimeout(this.routeChangeTimeout);\n        }\n        this.routeChangeTimeout = window.setTimeout(() => {\n          this.recreateOverlay();\n        }, 100);\n      }\n    });\n    \n    this.observer.observe(document.documentElement, {\n      childList: true,\n      subtree: true,\n      attributes: false\n    });\n  }\n\n  private setupPeriodicCheck(): void {\n    // High-frequency check for debug overlay integrity\n    setInterval(() => {\n      if (this.isEnabled && this.showDebugOverlay && (this.currentInsets.top > 0 || this.currentInsets.bottom > 0 || this.currentInsets.left > 0 || this.currentInsets.right > 0)) {\n        const existingOverlay = document.querySelector('.safe-area-simulator-debug');\n        if (!existingOverlay) {\n          console.log('[Safe Area Simulator] Debug overlay missing, recreating...');\n          this.updateDebugOverlay();\n        }\n      }\n    }, 100); // Check every 100ms for much faster recovery\n    \n    // Additional requestAnimationFrame-based check for maximum responsiveness\n    const animationFrameCheck = () => {\n      if (this.isEnabled && this.showDebugOverlay && (this.currentInsets.top > 0 || this.currentInsets.bottom > 0 || this.currentInsets.left > 0 || this.currentInsets.right > 0)) {\n        const existingOverlay = document.querySelector('.safe-area-simulator-debug');\n        if (!existingOverlay) {\n          this.updateDebugOverlay();\n        }\n      }\n      requestAnimationFrame(animationFrameCheck);\n    };\n    requestAnimationFrame(animationFrameCheck);\n  }\n\n  private debouncedRecreateDebugOverlay(): void {\n    // Clear any existing recreation timeout to prevent rapid recreation\n    if (this.overlayRecreationTimeout) {\n      clearTimeout(this.overlayRecreationTimeout);\n    }\n    \n    // Immediate recreation for critical scenarios - no debouncing delay\n    this.updateDebugOverlay();\n    \n    // Also schedule a follow-up check to ensure it sticks\n    this.overlayRecreationTimeout = window.setTimeout(() => {\n      this.updateDebugOverlay();\n    }, 10);\n  }\n\n  private handleRouteChange(): void {\n    console.log('[Safe Area Simulator] Handling route change');\n    \n    // Immediately check if overlay still exists\n    const existingOverlay = document.querySelector('.safe-area-simulator-debug');\n    if (this.isEnabled && this.showDebugOverlay && !existingOverlay && (this.currentInsets.top > 0 || this.currentInsets.bottom > 0 || this.currentInsets.left > 0 || this.currentInsets.right > 0)) {\n      console.log('[Safe Area Simulator] Overlay missing after route change, recreating immediately');\n      this.updateDebugOverlay();\n    }\n    \n    // Delay recreation to allow SPA to finish rendering\n    if (this.routeChangeTimeout) {\n      clearTimeout(this.routeChangeTimeout);\n    }\n    this.routeChangeTimeout = window.setTimeout(() => {\n      this.recreateOverlay();\n      // Force update debug overlay after route change\n      this.updateDebugOverlay();\n    }, 100); // Reduced delay for faster response\n    \n    // Also check again after a longer delay in case the SPA does late rendering\n    setTimeout(() => {\n      const laterOverlay = document.querySelector('.safe-area-simulator-debug');\n      if (this.isEnabled && this.showDebugOverlay && !laterOverlay && (this.currentInsets.top > 0 || this.currentInsets.bottom > 0 || this.currentInsets.left > 0 || this.currentInsets.right > 0)) {\n        console.log('[Safe Area Simulator] Late overlay check - recreating');\n        this.updateDebugOverlay();\n      }\n    }, 1000);\n  }\n\n  private recreateOverlay(): void {\n    // Only recreate if enabled and device is selected\n    if (!this.isEnabled || !this.currentDevice) return;\n    \n    // Recreate the phone frame overlay\n    if (this.phoneFrameOverlay) {\n      this.phoneFrameOverlay.destroy();\n    }\n    \n    // Ensure body exists\n    if (!document.body) {\n      setTimeout(() => this.recreateOverlay(), 100);\n      return;\n    }\n    \n    this.createPhoneFrameOverlay();\n    this.updatePhoneFrame();\n    \n    // Recreate hardware renderer\n    if (this.hardwareRenderer) {\n      this.hardwareRenderer.destroy();\n      this.hardwareRenderer = null;\n    }\n    this.createHardwareRenderer();\n    this.updateHardwareRegions();\n    \n    // Also recreate debug overlay if needed\n    this.updateDebugOverlay();\n  }\n\n  private createStyleElement(): void {\n    this.styleElement = document.createElement('style');\n    this.styleElement.id = 'safe-area-simulator-styles';\n    document.head.appendChild(this.styleElement);\n  }\n\n  private setupMessageListener(): void {\n    chrome.runtime.onMessage.addListener((\n      message: SafeAreaMessage, \n      _sender: chrome.runtime.MessageSender, \n      sendResponse: (response: any) => void\n    ) => {\n      if (message.action === 'updateSafeArea') {\n        this.isEnabled = message.enabled || false;\n        this.currentInsets = message.insets || { top: 0, bottom: 0, left: 0, right: 0 };\n        this.currentDevice = message.device || this.currentDevice;\n        \n        // Save device frame preference\n        if (message.showDeviceFrame !== undefined) {\n          chrome.storage.sync.set({ showDeviceFrame: message.showDeviceFrame });\n        }\n        \n        // Handle hardware regions setting\n        if (message.settings?.showHardwareRegions !== undefined) {\n          this.showHardwareRegions = message.settings.showHardwareRegions;\n          chrome.storage.sync.set({ showHardwareRegions: this.showHardwareRegions });\n        }\n        \n        // Handle debug overlay setting\n        if (message.settings?.showDebugOverlay !== undefined) {\n          this.showDebugOverlay = message.settings.showDebugOverlay;\n          chrome.storage.sync.set({ showDebugOverlay: this.showDebugOverlay });\n        }\n        \n        this.updateStyles();\n        this.updatePhoneFrame();\n        this.updateHardwareRegions();\n        sendResponse({ success: true });\n      }\n      return true;\n    });\n  }\n\n  private injectInitialStyles(): void {\n    // Add base styles that might be useful for developers\n    const baseStyles = `\n/* Safe Area Simulator - Base Styles */\n.safe-area-simulator-debug {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  z-index: 999999;\n}\n\n.safe-area-simulator-debug::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-width: var(--safe-area-inset-top, 0) var(--safe-area-inset-right, 0) var(--safe-area-inset-bottom, 0) var(--safe-area-inset-left, 0);\n  background: \n    linear-gradient(to bottom, rgba(255, 59, 48, 0.1) 0, rgba(255, 59, 48, 0.1) var(--safe-area-inset-top, 0), transparent var(--safe-area-inset-top, 0)),\n    linear-gradient(to top, rgba(255, 59, 48, 0.1) 0, rgba(255, 59, 48, 0.1) var(--safe-area-inset-bottom, 0), transparent var(--safe-area-inset-bottom, 0)),\n    linear-gradient(to right, rgba(255, 59, 48, 0.1) 0, rgba(255, 59, 48, 0.1) var(--safe-area-inset-left, 0), transparent var(--safe-area-inset-left, 0)),\n    linear-gradient(to left, rgba(255, 59, 48, 0.1) 0, rgba(255, 59, 48, 0.1) var(--safe-area-inset-right, 0), transparent var(--safe-area-inset-right, 0));\n}\n\n/* Utility classes for developers */\n.safe-area-inset-top {\n  padding-top: env(safe-area-inset-top, var(--safe-area-inset-top, 0)) !important;\n}\n\n.safe-area-inset-bottom {\n  padding-bottom: env(safe-area-inset-bottom, var(--safe-area-inset-bottom, 0)) !important;\n}\n\n.safe-area-inset-left {\n  padding-left: env(safe-area-inset-left, var(--safe-area-inset-left, 0)) !important;\n}\n\n.safe-area-inset-right {\n  padding-right: env(safe-area-inset-right, var(--safe-area-inset-right, 0)) !important;\n}\n\n.safe-area-inset-all {\n  padding: \n    env(safe-area-inset-top, var(--safe-area-inset-top, 0))\n    env(safe-area-inset-right, var(--safe-area-inset-right, 0))\n    env(safe-area-inset-bottom, var(--safe-area-inset-bottom, 0))\n    env(safe-area-inset-left, var(--safe-area-inset-left, 0)) !important;\n}\n`;\n\n    if (this.styleElement) {\n      this.styleElement.textContent = baseStyles;\n    }\n    this.updateStyles();\n  }\n\n  private updateStyles(): void {\n    if (!this.styleElement) return;\n\n\n    const currentDevice = DEVICES[this.currentDevice || 'none'];\n\n    const { top, bottom, left, right } = this.isEnabled ? currentDevice.safeAreaInsets : { top: 0, bottom: 0, left: 0, right: 0 };\n\n    // Create CSS custom properties\n    const safeAreaStyles = `\n:root {\n  --safe-area-inset-top: ${top}px;\n  --safe-area-inset-bottom: ${bottom}px;\n  --safe-area-inset-left: ${left}px;\n  --safe-area-inset-right: ${right}px;\n}\n\n/* Override env() function for safe area insets */\nhtml {\n  --safe-area-inset-top: ${top}px;\n  --safe-area-inset-bottom: ${bottom}px;\n  --safe-area-inset-left: ${left}px;\n  --safe-area-inset-right: ${right}px;\n}\n`;\n\n    // Update existing styles\n    const existingStyles = this.styleElement.textContent || '';\n    const baseStylesMatch = existingStyles.match(/(\\/\\* Safe Area Simulator - Base Styles \\*\\/[\\s\\S]*?)(:root {|$)/);\n    \n    if (baseStylesMatch) {\n      const baseStyles = baseStylesMatch[1];\n      this.styleElement.textContent = baseStyles + safeAreaStyles;\n    } else {\n      this.styleElement.textContent += safeAreaStyles;\n    }\n\n    // Add or remove debug overlay\n    this.updateDebugOverlay();\n\n    // Update phone frame overlay\n    this.updatePhoneFrame();\n\n    // Update hardware regions\n    this.updateHardwareRegions();\n\n    // Dispatch custom event for websites that want to listen for safe area changes\n    const event = new CustomEvent('safeAreaInsetsChanged', {\n      detail: {\n        top,\n        bottom,\n        left,\n        right,\n        enabled: this.isEnabled\n      }\n    });\n    document.dispatchEvent(event);\n\n    // Log for debugging\n    if (this.isEnabled) {\n      console.log(`[Safe Area Simulator] Applied insets: top=${top}px, bottom=${bottom}px, left=${left}px, right=${right}px`);\n    } else {\n      console.log('[Safe Area Simulator] Disabled - insets reset to 0');\n    }\n  }\n\n  private updateHardwareRegions(): void {\n    if (!this.hardwareRenderer) return;\n    \n    try {\n      // Set visibility based on enabled state and showHardwareRegions setting\n      const shouldShow = this.isEnabled && this.showHardwareRegions && this.currentDevice;\n      this.hardwareRenderer.setVisible(shouldShow);\n      \n      if (shouldShow && this.currentDevice && DEVICES[this.currentDevice]) {\n        const device = DEVICES[this.currentDevice];\n        this.hardwareRenderer.updateDevice(device);\n        console.log(`[Safe Area Simulator] Updated hardware regions for ${device.name}`);\n      }\n    } catch (error) {\n      console.error('[Safe Area Simulator] Error updating hardware regions:', error);\n    }\n  }\n\n  private destroy(): void {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n    \n    if (this.debugOverlayObserver) {\n      this.debugOverlayObserver.disconnect();\n      this.debugOverlayObserver = null;\n    }\n    \n    if (this.routeChangeTimeout) {\n      clearTimeout(this.routeChangeTimeout);\n      this.routeChangeTimeout = null;\n    }\n    \n    if (this.overlayRecreationTimeout) {\n      clearTimeout(this.overlayRecreationTimeout);\n      this.overlayRecreationTimeout = null;\n    }\n    \n    if (this.phoneFrameOverlay) {\n      this.phoneFrameOverlay.destroy();\n      this.phoneFrameOverlay = null;\n    }\n    \n    if (this.hardwareRenderer) {\n      this.hardwareRenderer.destroy();\n      this.hardwareRenderer = null;\n    }\n    \n    if (this.styleElement) {\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n    \n    // Remove debug overlay from documentElement\n    const debugOverlays = document.querySelectorAll('.safe-area-simulator-debug');\n    debugOverlays.forEach(overlay => overlay.remove());\n  }\n\n  // Handle extension disable/unload\n  handleExtensionDisable(): void {\n    this.destroy();\n  }\n\n  private updatePhoneFrame(): void {\n    if (!this.phoneFrameOverlay) return;\n    \n    try {\n      chrome.storage.sync.get(['showDeviceFrame'], (result) => {\n        const showFrame = result.showDeviceFrame || false;\n        \n        if (this.isEnabled && this.currentDevice && showFrame) {\n          if (this.phoneFrameOverlay && typeof this.phoneFrameOverlay.updateDevice === 'function') {\n            const device = DEVICES[this.currentDevice || 'none'];\n            this.phoneFrameOverlay.updateDevice(this.currentDevice, device.safeAreaInsets);\n          }\n        } else {\n          if (this.phoneFrameOverlay && typeof this.phoneFrameOverlay.hide === 'function') {\n            this.phoneFrameOverlay.hide();\n          }\n        }\n      });\n    } catch (error) {\n      console.error('[Safe Area Simulator] Error updating phone frame:', error);\n    }\n  }\n\n  private updateDebugOverlay(): void {\n    const existingOverlay = document.querySelector('.safe-area-simulator-debug');\n    const shouldShowOverlay = this.isEnabled && this.showDebugOverlay && (this.currentInsets.top > 0 || this.currentInsets.bottom > 0 || this.currentInsets.left > 0 || this.currentInsets.right > 0);\n    \n    if (shouldShowOverlay) {\n      if (!existingOverlay) {\n        console.log('[Safe Area Simulator] Creating new debug overlay');\n        const overlay = document.createElement('div');\n        overlay.className = 'safe-area-simulator-debug';\n        overlay.title = 'Safe Area Simulator - Visual Guide';\n        overlay.setAttribute('data-safe-area-overlay', 'true');\n        overlay.style.cssText = 'position: fixed !important; top: 0 !important; left: 0 !important; right: 0 !important; bottom: 0 !important; pointer-events: none !important; z-index: 999999 !important;';\n        \n        // Try multiple insertion strategies for maximum compatibility\n        let insertionSuccess = false;\n        \n        // Strategy 1: Insert into body first (more stable for SPAs)\n        if (document.body && !insertionSuccess) {\n          try {\n            document.body.appendChild(overlay);\n            insertionSuccess = true;\n            this.setupOverlayProtection();\n          } catch (error) {\n            console.warn('[Safe Area Simulator] Failed to insert overlay into body:', error);\n          }\n        }\n        \n        // Strategy 2: Insert before the first child of documentElement\n        if (!insertionSuccess && document.documentElement.firstChild) {\n          try {\n            document.documentElement.insertBefore(overlay, document.documentElement.firstChild);\n            insertionSuccess = true;\n            this.setupOverlayProtection();\n          } catch (error) {\n            console.warn('[Safe Area Simulator] Failed to insert overlay before first child:', error);\n          }\n        }\n        \n        // Strategy 3: Append to documentElement\n        if (!insertionSuccess) {\n          try {\n            document.documentElement.appendChild(overlay);\n            insertionSuccess = true;\n            this.setupOverlayProtection();\n          } catch (error) {\n            console.error('[Safe Area Simulator] All overlay insertion strategies failed:', error);\n          }\n        }\n        \n        if (!insertionSuccess) {\n          console.error('[Safe Area Simulator] Could not insert debug overlay into DOM');\n        }\n      }\n    } else {\n      if (existingOverlay) {\n        existingOverlay.remove();\n      }\n    }\n  }\n\n  private setupOverlayProtection(): void {\n    // Clear any existing observer\n    if (this.debugOverlayObserver) {\n      this.debugOverlayObserver.disconnect();\n    }\n    \n    this.debugOverlayObserver = new MutationObserver((mutations) => {\n      let overlayRemoved = false;\n      let containerRemoved = false;\n      let needsRecreation = false;\n      \n      mutations.forEach((mutation) => {\n        if (mutation.type === 'childList') {\n          mutation.removedNodes.forEach((node) => {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              const element = node as Element;\n              \n              // Check if our specific overlay was removed\n              if (element.classList?.contains('safe-area-simulator-debug')) {\n                overlayRemoved = true;\n              }\n              \n              // Check if container holding our overlay was removed\n              if (element.querySelector && element.querySelector('.safe-area-simulator-debug')) {\n                containerRemoved = true;\n              }\n              \n              // Check for body or documentElement changes\n              if (element.tagName === 'BODY' || element === document.documentElement) {\n                needsRecreation = true;\n              }\n            }\n          });\n        }\n      });\n      \n      if (overlayRemoved || containerRemoved || needsRecreation) {\n        console.log('[Safe Area Simulator] Overlay protection triggered, recreating overlay...');\n        // Immediate synchronous recreation\n        this.updateDebugOverlay();\n        // Also trigger debounced recreation as backup\n        this.debouncedRecreateDebugOverlay();\n      }\n    });\n    \n    // Observe both documentElement and body for maximum protection\n    this.debugOverlayObserver.observe(document.documentElement, {\n      childList: true,\n      subtree: true\n    });\n    \n    if (document.body) {\n      this.debugOverlayObserver.observe(document.body, {\n        childList: true,\n        subtree: false\n      });\n    }\n  }\n}","import { browser as _browser } from \"@wxt-dev/browser\";\nexport const browser = _browser;\nexport {};\n","// #region snippet\nexport const browser = globalThis.browser?.runtime?.id\n  ? globalThis.browser\n  : globalThis.chrome;\n// #endregion snippet\n","function print(method, ...args) {\n  if (import.meta.env.MODE === \"production\") return;\n  if (typeof args[0] === \"string\") {\n    const message = args.shift();\n    method(`[wxt] ${message}`, ...args);\n  } else {\n    method(\"[wxt]\", ...args);\n  }\n}\nexport const logger = {\n  debug: (...args) => print(console.debug, ...args),\n  log: (...args) => print(console.log, ...args),\n  warn: (...args) => print(console.warn, ...args),\n  error: (...args) => print(console.error, ...args)\n};\n","import { browser } from \"wxt/browser\";\nexport class WxtLocationChangeEvent extends Event {\n  constructor(newUrl, oldUrl) {\n    super(WxtLocationChangeEvent.EVENT_NAME, {});\n    this.newUrl = newUrl;\n    this.oldUrl = oldUrl;\n  }\n  static EVENT_NAME = getUniqueEventName(\"wxt:locationchange\");\n}\nexport function getUniqueEventName(eventName) {\n  return `${browser?.runtime?.id}:${import.meta.env.ENTRYPOINT}:${eventName}`;\n}\n","import { WxtLocationChangeEvent } from \"./custom-events.mjs\";\nexport function createLocationWatcher(ctx) {\n  let interval;\n  let oldUrl;\n  return {\n    /**\n     * Ensure the location watcher is actively looking for URL changes. If it's already watching,\n     * this is a noop.\n     */\n    run() {\n      if (interval != null) return;\n      oldUrl = new URL(location.href);\n      interval = ctx.setInterval(() => {\n        let newUrl = new URL(location.href);\n        if (newUrl.href !== oldUrl.href) {\n          window.dispatchEvent(new WxtLocationChangeEvent(newUrl, oldUrl));\n          oldUrl = newUrl;\n        }\n      }, 1e3);\n    }\n  };\n}\n","import { browser } from \"wxt/browser\";\nimport { logger } from \"../utils/internal/logger.mjs\";\nimport {\n  getUniqueEventName\n} from \"./internal/custom-events.mjs\";\nimport { createLocationWatcher } from \"./internal/location-watcher.mjs\";\nexport class ContentScriptContext {\n  constructor(contentScriptName, options) {\n    this.contentScriptName = contentScriptName;\n    this.options = options;\n    this.abortController = new AbortController();\n    if (this.isTopFrame) {\n      this.listenForNewerScripts({ ignoreFirstEvent: true });\n      this.stopOldScripts();\n    } else {\n      this.listenForNewerScripts();\n    }\n  }\n  static SCRIPT_STARTED_MESSAGE_TYPE = getUniqueEventName(\n    \"wxt:content-script-started\"\n  );\n  isTopFrame = window.self === window.top;\n  abortController;\n  locationWatcher = createLocationWatcher(this);\n  receivedMessageIds = /* @__PURE__ */ new Set();\n  get signal() {\n    return this.abortController.signal;\n  }\n  abort(reason) {\n    return this.abortController.abort(reason);\n  }\n  get isInvalid() {\n    if (browser.runtime.id == null) {\n      this.notifyInvalidated();\n    }\n    return this.signal.aborted;\n  }\n  get isValid() {\n    return !this.isInvalid;\n  }\n  /**\n   * Add a listener that is called when the content script's context is invalidated.\n   *\n   * @returns A function to remove the listener.\n   *\n   * @example\n   * browser.runtime.onMessage.addListener(cb);\n   * const removeInvalidatedListener = ctx.onInvalidated(() => {\n   *   browser.runtime.onMessage.removeListener(cb);\n   * })\n   * // ...\n   * removeInvalidatedListener();\n   */\n  onInvalidated(cb) {\n    this.signal.addEventListener(\"abort\", cb);\n    return () => this.signal.removeEventListener(\"abort\", cb);\n  }\n  /**\n   * Return a promise that never resolves. Useful if you have an async function that shouldn't run\n   * after the context is expired.\n   *\n   * @example\n   * const getValueFromStorage = async () => {\n   *   if (ctx.isInvalid) return ctx.block();\n   *\n   *   // ...\n   * }\n   */\n  block() {\n    return new Promise(() => {\n    });\n  }\n  /**\n   * Wrapper around `window.setInterval` that automatically clears the interval when invalidated.\n   */\n  setInterval(handler, timeout) {\n    const id = setInterval(() => {\n      if (this.isValid) handler();\n    }, timeout);\n    this.onInvalidated(() => clearInterval(id));\n    return id;\n  }\n  /**\n   * Wrapper around `window.setTimeout` that automatically clears the interval when invalidated.\n   */\n  setTimeout(handler, timeout) {\n    const id = setTimeout(() => {\n      if (this.isValid) handler();\n    }, timeout);\n    this.onInvalidated(() => clearTimeout(id));\n    return id;\n  }\n  /**\n   * Wrapper around `window.requestAnimationFrame` that automatically cancels the request when\n   * invalidated.\n   */\n  requestAnimationFrame(callback) {\n    const id = requestAnimationFrame((...args) => {\n      if (this.isValid) callback(...args);\n    });\n    this.onInvalidated(() => cancelAnimationFrame(id));\n    return id;\n  }\n  /**\n   * Wrapper around `window.requestIdleCallback` that automatically cancels the request when\n   * invalidated.\n   */\n  requestIdleCallback(callback, options) {\n    const id = requestIdleCallback((...args) => {\n      if (!this.signal.aborted) callback(...args);\n    }, options);\n    this.onInvalidated(() => cancelIdleCallback(id));\n    return id;\n  }\n  addEventListener(target, type, handler, options) {\n    if (type === \"wxt:locationchange\") {\n      if (this.isValid) this.locationWatcher.run();\n    }\n    target.addEventListener?.(\n      type.startsWith(\"wxt:\") ? getUniqueEventName(type) : type,\n      handler,\n      {\n        ...options,\n        signal: this.signal\n      }\n    );\n  }\n  /**\n   * @internal\n   * Abort the abort controller and execute all `onInvalidated` listeners.\n   */\n  notifyInvalidated() {\n    this.abort(\"Content script context invalidated\");\n    logger.debug(\n      `Content script \"${this.contentScriptName}\" context invalidated`\n    );\n  }\n  stopOldScripts() {\n    window.postMessage(\n      {\n        type: ContentScriptContext.SCRIPT_STARTED_MESSAGE_TYPE,\n        contentScriptName: this.contentScriptName,\n        messageId: Math.random().toString(36).slice(2)\n      },\n      \"*\"\n    );\n  }\n  verifyScriptStartedEvent(event) {\n    const isScriptStartedEvent = event.data?.type === ContentScriptContext.SCRIPT_STARTED_MESSAGE_TYPE;\n    const isSameContentScript = event.data?.contentScriptName === this.contentScriptName;\n    const isNotDuplicate = !this.receivedMessageIds.has(event.data?.messageId);\n    return isScriptStartedEvent && isSameContentScript && isNotDuplicate;\n  }\n  listenForNewerScripts(options) {\n    let isFirst = true;\n    const cb = (event) => {\n      if (this.verifyScriptStartedEvent(event)) {\n        this.receivedMessageIds.add(event.data.messageId);\n        const wasFirst = isFirst;\n        isFirst = false;\n        if (wasFirst && options?.ignoreFirstEvent) return;\n        this.notifyInvalidated();\n      }\n    };\n    addEventListener(\"message\", cb);\n    this.onInvalidated(() => removeEventListener(\"message\", cb));\n  }\n}\n"],"names":["defineContentScript","definition","DEVICES","PhoneFrameSimple","options","device","insets","HardwareRegionsRenderer","visible","regions","appearance","viewport","scaleX","scaleY","scale","centerX","topOffset","islandWidth","notch","punchHole","indicator","region","element","style","contentElement","contentEl","content","baseStyle","container","ctx","injector","SafeAreaInjector","callback","result","error","originalPushState","originalReplaceState","args","lastUrl","lastPathname","lastHash","currentUrl","currentPathname","currentHash","mutations","shouldRecreate","shouldRecreateDebugOverlay","mutation","node","animationFrameCheck","existingOverlay","laterOverlay","message","_sender","sendResponse","baseStyles","currentDevice","top","bottom","left","right","safeAreaStyles","baseStylesMatch","event","shouldShow","overlay","showFrame","insertionSuccess","overlayRemoved","containerRemoved","needsRecreation","browser","print","method","logger","_WxtLocationChangeEvent","newUrl","oldUrl","__publicField","getUniqueEventName","WxtLocationChangeEvent","eventName","createLocationWatcher","interval","_ContentScriptContext","contentScriptName","reason","cb","handler","timeout","id","target","type","isScriptStartedEvent","isSameContentScript","isNotDuplicate","isFirst","wasFirst","ContentScriptContext"],"mappings":"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","x_google_ignoreList":[0,5,6,7,8,9,10]}